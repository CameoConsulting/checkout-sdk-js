{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///external \"lodash\"","webpack:///./src/billing/is-billing-address-like.ts","webpack:///./src/coupon/map-to-internal-coupon.ts","webpack:///./src/coupon/map-to-internal-gift-certificate.ts","webpack:///./src/common/utility/cache-key-maps.ts","webpack:///./src/common/utility/cache-key-resolver.ts","webpack:///./src/quote/map-to-internal-quote.ts","webpack:///./src/shipping/map-to-internal-shipping-options.ts","webpack:///./src/bundles/internal-mappers.ts","webpack:///./src/address/map-to-internal-address.ts","webpack:///./src/cart/map-to-internal-line-items.ts","webpack:///./src/cart/map-gift-certificate-to-internal-line-item.ts","webpack:///./src/payment/payment-method-types.ts","webpack:///./src/cart/map-to-internal-line-item.ts","webpack:///./src/shipping/map-to-internal-shipping-option.ts","webpack:///./src/common/utility/amount-transformer.ts","webpack:///external \"shallowequal\"","webpack:///./src/customer/map-to-internal-customer.ts","webpack:///./src/order/map-to-internal-order.ts","webpack:///./src/cart/map-to-internal-cart.ts","webpack:///./src/promotion/map-to-discount-notifications.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","isBillingAddressLike","address","id","couponTypes","mapToInternalCoupon","coupon","code","discount","displayName","discountType","indexOf","couponType","mapToInternalGiftCertificate","giftCertificate","discountedAmount","used","remainingBalance","remaining","balance","purchaseDate","isTerminalCacheKeyMap","map","options","_lastId","_map","maps","_usedMaps","this","_options","maxSize","isEqual","onExpire","getKey","result","_resolveMap","args","index","parentMap","cacheKey","usedCount","_generateMap","slice","_removeLeastUsedMap","getUsedCount","length","isMatched","mapIndex","unshift","splice","parent","terminalMap","recentlyUsedMap","pop","_removeMap","isRootCacheKeyMap","mapToInternalQuote","checkout","shippingAddress","consignment","consignments","orderComment","customerMessage","shippingOption","selectedShippingOption","undefined","billingAddress","mapToInternalShippingOptions","reduce","shippingOptions","availableShippingOptions","option","selectedOptionId","mapToInternalAddress","addressId","firstName","lastName","company","addressLine1","address1","addressLine2","address2","city","province","stateOrProvince","provinceCode","stateOrProvinceCode","postCode","postalCode","country","countryCode","phone","customFields","mapToInternalLineItems","itemMap","decimalPlaces","idKey","keys","item","amountTransformer","imageUrl","amount","amountAfterDiscount","integerAmount","toInteger","integerAmountAfterDiscount","integerUnitPrice","integerUnitPriceAfterDiscount","integerDiscount","quantity","sender","recipient","type","attributes","variantId","mapGiftCertificateToInternalLineItem","mapToInternalLineItemType","HOSTED","OFFLINE","mapToInternalLineItem","extendedListPrice","extendedSalePrice","discountAmount","listPrice","salePrice","downloadsPageUrl","downloadPageUrl","brand","sku","categoryNames","productId","addedByPromotion","mapToInternalShippingOption","isSelected","description","price","cost","selected","isRecommended","transitTime","_decimalPlaces","Math","round","pow","mapToInternalCustomer","customer","addresses","customerId","isGuest","storeCredit","email","fullName","join","customerGroupName","customerGroup","mapToInternalOrder","order","orderMeta","payments","items","currency","orderId","lineItems","customerCanBeCreated","payment","mapToInternalOrderPayment","subtotal","baseAmount","coupons","sum","token","orderToken","callbackUrl","discountNotifications","providerId","totalDiscountedAmount","appliedGiftCertificates","detail","socialData","mapToInternalSocialDataList","status","hasDigitalItems","isDownloadable","isComplete","shipping","shippingCostTotal","amountBeforeDiscount","shippingCostBeforeDiscount","integerAmountBeforeDiscount","mapToStoreCredit","taxes","taxTotal","handling","handlingCostTotal","grandTotal","orderAmount","orderAmountAsInteger","mapToInternalPaymentStatus","isDefaultOrderPayment","step","helpText","instructions","returnUrl","socialDataObject","physicalItems","digitalItems","forEach","lineItem","socialMedia","image","url","link","shareText","text","sharingLink","channelName","channel","channelCode","mapToInternalCart","promotions","notifications","cart","promotion","banners","banner","push","placeholders","message","messageHtml","giftCertificates","certificate","required","isShippingRequired","taxSubtotal"],"mappings":"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","file":"internal-mappers.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 231);\n","module.exports = require(\"tslib\");","module.exports = require(\"lodash\");","import { Address } from '../address';\r\n\r\nimport BillingAddress from './billing-address';\r\n\r\nexport default function isBillingAddressLike(address: Address): address is BillingAddress {\r\n    const billingAddress = address as BillingAddress;\r\n\r\n    return typeof billingAddress.id !== 'undefined';\r\n}\r\n","import Coupon from './coupon';\r\nimport InternalCoupon from './internal-coupon';\r\n\r\nconst couponTypes = [\r\n    'per_item_discount',\r\n    'percentage_discount',\r\n    'per_total_discount',\r\n    'shipping_discount',\r\n    'free_shipping',\r\n];\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalCoupon(coupon: Coupon): InternalCoupon {\r\n    return {\r\n        code: coupon.code,\r\n        discount: coupon.displayName,\r\n        discountType: couponTypes.indexOf(coupon.couponType),\r\n    };\r\n}\r\n","import GiftCertificate from './gift-certificate';\r\nimport InternalGiftCertificate from './internal-gift-certificate';\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalGiftCertificate(giftCertificate: GiftCertificate): InternalGiftCertificate {\r\n    return {\r\n        code: giftCertificate.code,\r\n        discountedAmount: giftCertificate.used,\r\n        remainingBalance: giftCertificate.remaining,\r\n        giftCertificate: {\r\n            balance: giftCertificate.balance,\r\n            code: giftCertificate.code,\r\n            purchaseDate: giftCertificate.purchaseDate,\r\n        },\r\n    };\r\n}\r\n","export interface RootCacheKeyMap {\r\n    maps: ChildCacheKeyMap[];\r\n}\r\n\r\nexport interface IntermediateCacheKeyMap {\r\n    maps: ChildCacheKeyMap[];\r\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\r\n    usedCount: number;\r\n    value: any;\r\n}\r\n\r\nexport interface TerminalCacheKeyMap extends IntermediateCacheKeyMap {\r\n    cacheKey: string;\r\n}\r\n\r\nexport type ChildCacheKeyMap = IntermediateCacheKeyMap | TerminalCacheKeyMap;\r\n\r\nexport function isTerminalCacheKeyMap(map: ChildCacheKeyMap): map is TerminalCacheKeyMap {\r\n    return map.hasOwnProperty('cacheKey');\r\n}\r\n\r\nexport function isRootCacheKeyMap(map: RootCacheKeyMap | ChildCacheKeyMap): map is RootCacheKeyMap {\r\n    return map.hasOwnProperty('parentMap');\r\n}\r\n","import { noop } from 'lodash';\r\nimport shallowEqual from 'shallowequal';\r\n\r\nimport { isRootCacheKeyMap, isTerminalCacheKeyMap, ChildCacheKeyMap, IntermediateCacheKeyMap, RootCacheKeyMap, TerminalCacheKeyMap } from './cache-key-maps';\r\n\r\nexport interface CacheKeyResolverOptions {\r\n    maxSize?: number;\r\n    onExpire?(key: string): void;\r\n    isEqual?(valueA: any, valueB: any): boolean;\r\n}\r\n\r\ninterface ResolveResult {\r\n    index: number;\r\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\r\n    map?: TerminalCacheKeyMap;\r\n}\r\n\r\nexport default class CacheKeyResolver {\r\n    private _lastId = 0;\r\n    private _map: RootCacheKeyMap = { maps: [] };\r\n    private _usedMaps: TerminalCacheKeyMap[] = [];\r\n    private _options: Required<CacheKeyResolverOptions>;\r\n\r\n    constructor(options?: CacheKeyResolverOptions) {\r\n        this._options = {\r\n            maxSize: 0,\r\n            isEqual: shallowEqual,\r\n            onExpire: noop,\r\n            ...options,\r\n        };\r\n    }\r\n\r\n    getKey(...args: any[]): string {\r\n        const result = this._resolveMap(...args);\r\n        const { index, parentMap } = result;\r\n        let { map } = result;\r\n\r\n        if (map && map.cacheKey) {\r\n            map.usedCount++;\r\n        } else {\r\n            map = this._generateMap(parentMap, args.slice(index));\r\n        }\r\n\r\n        // Keep track of the least used map so we can remove it if the size of\r\n        // the stack exceeds the maximum size.\r\n        this._removeLeastUsedMap(map);\r\n\r\n        return map.cacheKey;\r\n    }\r\n\r\n    getUsedCount(...args: any[]): number {\r\n        const { map } = this._resolveMap(...args);\r\n\r\n        return map ? map.usedCount : 0;\r\n    }\r\n\r\n    private _resolveMap(...args: any[]): ResolveResult {\r\n        let index = 0;\r\n        let parentMap = this._map;\r\n\r\n        // Traverse the tree to find the linked list of maps that match the\r\n        // arguments of the call. Each intermediate or terminal map contains a\r\n        // value that could be used to match with the arguments. The last map in\r\n        // the list (the terminal) should contain a cache key. If it can does\r\n        // not exist, we will return a falsy value so that the caller could\r\n        // handle and generate a new cache key.\r\n        while (parentMap.maps.length) {\r\n            let isMatched = false;\r\n\r\n            for (let mapIndex = 0; mapIndex < parentMap.maps.length; mapIndex++) {\r\n                const map = parentMap.maps[mapIndex];\r\n\r\n                if (!this._options.isEqual(map.value, args[index])) {\r\n                    continue;\r\n                }\r\n\r\n                // Move the most recently used map to the top of the stack for\r\n                // quicker access\r\n                parentMap.maps.unshift(...parentMap.maps.splice(mapIndex, 1));\r\n\r\n                if ((args.length === 0 || index === args.length - 1) && isTerminalCacheKeyMap(map)) {\r\n                    return { index, map, parentMap };\r\n                }\r\n\r\n                isMatched = true;\r\n                parentMap = map;\r\n                index++;\r\n\r\n                break;\r\n            }\r\n\r\n            if (!isMatched) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return { index, parentMap };\r\n    }\r\n\r\n    private _generateMap(parent: RootCacheKeyMap | IntermediateCacheKeyMap, args: any[]): TerminalCacheKeyMap {\r\n        let index = 0;\r\n        let parentMap = parent;\r\n        let map: IntermediateCacheKeyMap;\r\n\r\n        do {\r\n            map = {\r\n                maps: [],\r\n                parentMap,\r\n                usedCount: 1,\r\n                value: args[index],\r\n            };\r\n\r\n            // Continue to build the tree of maps so that it could be resolved\r\n            // next time when the function is called with the same set of\r\n            // arguments.\r\n            parentMap.maps.unshift(map);\r\n\r\n            parentMap = map;\r\n            index++;\r\n        } while (index < args.length);\r\n\r\n        const terminalMap = map as TerminalCacheKeyMap;\r\n\r\n        terminalMap.cacheKey = `${++this._lastId}`;\r\n\r\n        return terminalMap;\r\n    }\r\n\r\n    private _removeLeastUsedMap(recentlyUsedMap: TerminalCacheKeyMap): void {\r\n        if (!this._options.maxSize) {\r\n            return;\r\n        }\r\n\r\n        const index = this._usedMaps.indexOf(recentlyUsedMap);\r\n\r\n        this._usedMaps.splice(\r\n            index === -1 ? 0 : index,\r\n            index === -1 ? 0 : 1,\r\n            recentlyUsedMap\r\n        );\r\n\r\n        if (this._usedMaps.length <= this._options.maxSize) {\r\n            return;\r\n        }\r\n\r\n        const map = this._usedMaps.pop();\r\n\r\n        if (!map) {\r\n            return;\r\n        }\r\n\r\n        this._removeMap(map);\r\n        this._options.onExpire(map.cacheKey);\r\n    }\r\n\r\n    private _removeMap(map: ChildCacheKeyMap): void {\r\n        if (!map.parentMap) {\r\n            return;\r\n        }\r\n\r\n        map.parentMap.maps.splice(map.parentMap.maps.indexOf(map), 1);\r\n\r\n        if (isRootCacheKeyMap(map.parentMap)) {\r\n            return;\r\n        }\r\n\r\n        this._removeMap(map.parentMap);\r\n    }\r\n}\r\n","import { mapToInternalAddress, Address, InternalAddress } from '../address';\r\nimport { Checkout } from '../checkout';\r\n\r\nimport InternalQuote from './internal-quote';\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalQuote(checkout: Checkout, shippingAddress?: Address): InternalQuote {\r\n    const consignment = checkout.consignments && checkout.consignments[0];\r\n\r\n    return {\r\n        orderComment: checkout.customerMessage,\r\n        shippingOption: consignment && consignment.selectedShippingOption ? consignment.selectedShippingOption.id : undefined,\r\n        billingAddress: checkout.billingAddress ? mapToInternalAddress(checkout.billingAddress) : {} as InternalAddress,\r\n        shippingAddress: shippingAddress && mapToInternalAddress(shippingAddress, checkout.consignments),\r\n    };\r\n}\r\n","import Consignment from './consignment';\r\nimport { InternalShippingOptionList } from './internal-shipping-option';\r\nimport mapToInternalShippingOption from './map-to-internal-shipping-option';\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalShippingOptions(consignments: Consignment[]): InternalShippingOptionList {\r\n    return consignments.reduce((result, consignment) => {\r\n        let shippingOptions;\r\n\r\n        if (consignment.availableShippingOptions && consignment.availableShippingOptions.length) {\r\n            shippingOptions = consignment.availableShippingOptions;\r\n        } else if (consignment.selectedShippingOption) {\r\n            shippingOptions = [consignment.selectedShippingOption];\r\n        }\r\n\r\n        return {\r\n            ...result,\r\n            [consignment.id]: (shippingOptions || []).map(option => {\r\n                const selectedOptionId = consignment.selectedShippingOption && consignment.selectedShippingOption.id;\r\n\r\n                return mapToInternalShippingOption(\r\n                    option,\r\n                    option.id === selectedOptionId\r\n                );\r\n            }),\r\n        };\r\n    }, {});\r\n}\r\n","/**\r\n * Please note that these mappers are for internal use only. DO NOT USE. They\r\n * can be removed or changed at any time.\r\n */\r\nexport { mapToInternalAddress } from '../address';\r\nexport { mapToInternalCart } from '../cart';\r\nexport { mapToInternalCoupon, mapToInternalGiftCertificate } from '../coupon';\r\nexport { mapToInternalCustomer } from '../customer';\r\nexport { mapToInternalLineItem, mapToInternalLineItems } from '../cart';\r\nexport { mapToInternalOrder } from '../order';\r\nexport { mapToInternalQuote } from '../quote';\r\nexport { mapToInternalShippingOption, mapToInternalShippingOptions } from '../shipping';\r\nexport { CacheKeyResolver } from '../common/utility';\r\n","import { isBillingAddressLike, BillingAddress } from '../billing';\r\nimport { Consignment } from '../shipping';\r\n\r\nimport Address from './address';\r\nimport InternalAddress from './internal-address';\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalAddress(\r\n    address: Address | BillingAddress,\r\n    consignments?: Consignment[]\r\n): InternalAddress<any> {\r\n    let addressId;\r\n\r\n    if (isBillingAddressLike(address)) {\r\n        addressId = address.id;\r\n    } else if (consignments && consignments.length) {\r\n        addressId = consignments[0].id;\r\n    }\r\n\r\n    return {\r\n        id: addressId,\r\n        firstName: address.firstName,\r\n        lastName: address.lastName,\r\n        company: address.company,\r\n        addressLine1: address.address1,\r\n        addressLine2: address.address2,\r\n        city: address.city,\r\n        province: address.stateOrProvince,\r\n        provinceCode: address.stateOrProvinceCode,\r\n        postCode: address.postalCode,\r\n        country: address.country,\r\n        countryCode: address.countryCode,\r\n        phone: address.phone,\r\n        customFields: address.customFields,\r\n    };\r\n}\r\n","import InternalLineItem from './internal-line-item';\r\nimport { LineItem } from './line-item';\r\nimport LineItemMap from './line-item-map';\r\nimport mapGiftCertificateToInternalLineItem from './map-gift-certificate-to-internal-line-item';\r\nimport mapToInternalLineItem from './map-to-internal-line-item';\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalLineItems(\r\n    itemMap: LineItemMap,\r\n    decimalPlaces: number,\r\n    idKey: keyof LineItem = 'id'\r\n): InternalLineItem[] {\r\n    return (Object.keys(itemMap) as Array<keyof LineItemMap>)\r\n        .reduce((result, key) => [\r\n            ...result,\r\n            ...(itemMap[key] as LineItem[]).map((item: any) => {\r\n                if (key === 'giftCertificates') {\r\n                    return mapGiftCertificateToInternalLineItem(item, decimalPlaces);\r\n                }\r\n\r\n                return mapToInternalLineItem(\r\n                    item,\r\n                    mapToInternalLineItemType(key),\r\n                    decimalPlaces,\r\n                    idKey\r\n                );\r\n            }),\r\n        ], [] as InternalLineItem[]);\r\n}\r\n\r\nfunction mapToInternalLineItemType(type: string): string {\r\n    switch (type) {\r\n        case 'physicalItems':\r\n            return 'ItemPhysicalEntity';\r\n\r\n        case 'digitalItems':\r\n            return 'ItemDigitalEntity';\r\n\r\n        case 'giftCertificates':\r\n            return 'ItemGiftCertificateEntity';\r\n\r\n        default:\r\n            return '';\r\n    }\r\n}\r\n","import { AmountTransformer } from '../common/utility';\r\n\r\nimport InternalLineItem from './internal-line-item';\r\nimport { GiftCertificateItem } from './line-item';\r\n\r\nexport default function mapGiftCertificateToInternalLineItem(\r\n    item: GiftCertificateItem,\r\n    decimalPlaces: number\r\n): InternalLineItem {\r\n    const amountTransformer = new AmountTransformer(decimalPlaces);\r\n\r\n    return {\r\n        id: item.id,\r\n        imageUrl: '',\r\n        name: item.name,\r\n        amount: item.amount,\r\n        amountAfterDiscount: item.amount,\r\n        discount: 0,\r\n        integerAmount: amountTransformer.toInteger(item.amount),\r\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.amount),\r\n        integerUnitPrice: amountTransformer.toInteger(item.amount),\r\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.amount),\r\n        integerDiscount: 0,\r\n        quantity: 1,\r\n        sender: item.sender,\r\n        recipient: item.recipient,\r\n        type: 'ItemGiftCertificateEntity',\r\n        attributes: [],\r\n        variantId: null,\r\n    };\r\n}\r\n","export const HOSTED = 'PAYMENT_TYPE_HOSTED';\r\nexport const OFFLINE = 'PAYMENT_TYPE_OFFLINE';\r\n","import { AmountTransformer } from '../common/utility';\r\n\r\nimport InternalLineItem from './internal-line-item';\r\nimport { DigitalItem, LineItem } from './line-item';\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalLineItem(\r\n    item: LineItem,\r\n    type: string,\r\n    decimalPlaces: number,\r\n    idKey: keyof LineItem = 'id'\r\n): InternalLineItem {\r\n    const amountTransformer = new AmountTransformer(decimalPlaces);\r\n\r\n    return {\r\n        id: (item[idKey] as string | number),\r\n        imageUrl: item.imageUrl,\r\n        amount: item.extendedListPrice,\r\n        amountAfterDiscount: item.extendedSalePrice,\r\n        discount: item.discountAmount,\r\n        integerAmount: amountTransformer.toInteger(item.extendedListPrice),\r\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.extendedSalePrice),\r\n        integerDiscount: amountTransformer.toInteger(item.discountAmount),\r\n        integerUnitPrice: amountTransformer.toInteger(item.listPrice),\r\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.salePrice),\r\n        downloadsPageUrl: (item as DigitalItem).downloadPageUrl,\r\n        name: item.name,\r\n        quantity: item.quantity,\r\n        brand: item.brand,\r\n        sku: item.sku,\r\n        categoryNames: item.categoryNames,\r\n        variantId: item.variantId,\r\n        productId: item.productId,\r\n        attributes: (item.options || []).map(option => ({\r\n            name: option.name,\r\n            value: option.value,\r\n        })),\r\n        addedByPromotion: item.addedByPromotion,\r\n        type,\r\n    };\r\n}\r\n","import InternalShippingOption from './internal-shipping-option';\r\nimport ShippingOption from './shipping-option';\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalShippingOption(option: ShippingOption, isSelected: boolean): InternalShippingOption {\r\n    return {\r\n        description: option.description,\r\n        module: option.type,\r\n        price: option.cost,\r\n        id: option.id,\r\n        selected: isSelected,\r\n        isRecommended: option.isRecommended,\r\n        imageUrl: option.imageUrl,\r\n        transitTime: option.transitTime,\r\n    };\r\n}\r\n","export default class AmountTransformer {\r\n    constructor(private _decimalPlaces: number) {}\r\n\r\n    toInteger(amount: number): number {\r\n        return Math.round(amount * Math.pow(10, this._decimalPlaces));\r\n    }\r\n}\r\n","module.exports = require(\"shallowequal\");","import { mapToInternalAddress } from '../address';\r\nimport { BillingAddress } from '../billing';\r\n\r\nimport { Customer } from '.';\r\nimport InternalCustomer from './internal-customer';\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalCustomer(customer: Customer, billingAddress: BillingAddress): InternalCustomer {\r\n    const firstName = customer.firstName || billingAddress.firstName || '';\r\n    const lastName = customer.lastName || billingAddress.lastName || '';\r\n\r\n    return {\r\n        addresses: (customer.addresses || []).map(address => mapToInternalAddress(address)),\r\n        customerId: customer.id,\r\n        isGuest: customer.isGuest,\r\n        storeCredit: customer.storeCredit,\r\n        email: customer.email || billingAddress.email || '',\r\n        firstName,\r\n        lastName,\r\n        name: customer.fullName || [firstName, lastName].join(' '),\r\n        customerGroupName: customer.customerGroup && customer.customerGroup.name,\r\n    };\r\n}\r\n","import { filter, find, keyBy, reduce } from 'lodash';\r\n\r\nimport { mapToInternalLineItems, LineItem } from '../cart';\r\nimport { Checkout } from '../checkout';\r\nimport { AmountTransformer } from '../common/utility';\r\nimport { mapToInternalCoupon } from '../coupon';\r\nimport { HOSTED } from '../payment';\r\n\r\nimport InternalOrder, { InternalGiftCertificateList, InternalIncompleteOrder, InternalOrderPayment, InternalSocialDataList } from './internal-order';\r\nimport Order, { GatewayOrderPayment, GiftCertificateOrderPayment, OrderPayment, OrderPayments } from './order';\r\nimport { OrderMetaState } from './order-state';\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalOrder(order: Order, orderMeta: OrderMetaState = {}): InternalOrder {\r\n    const decimalPlaces = order.currency.decimalPlaces;\r\n    const amountTransformer = new AmountTransformer(decimalPlaces);\r\n\r\n    return {\r\n        id: order.orderId,\r\n        items: mapToInternalLineItems(order.lineItems, order.currency.decimalPlaces, 'productId'),\r\n        orderId: order.orderId,\r\n        currency: order.currency.code,\r\n        customerCanBeCreated: order.customerCanBeCreated,\r\n        payment: mapToInternalOrderPayment(order.payments, orderMeta.payment),\r\n        subtotal: {\r\n            amount: order.baseAmount,\r\n            integerAmount: amountTransformer.toInteger(order.baseAmount),\r\n        },\r\n        coupon: {\r\n            discountedAmount: reduce(order.coupons, (sum, coupon) => {\r\n                return sum + coupon.discountedAmount;\r\n            }, 0),\r\n            coupons: order.coupons.map(mapToInternalCoupon),\r\n        },\r\n        discount: {\r\n            amount: order.discountAmount,\r\n            integerAmount: amountTransformer.toInteger(order.discountAmount),\r\n        },\r\n        token: orderMeta.orderToken,\r\n        callbackUrl: orderMeta.callbackUrl,\r\n        discountNotifications: [],\r\n        giftCertificate: mapToGiftCertificates(order.payments),\r\n        socialData: mapToInternalSocialDataList(order),\r\n        status: order.status,\r\n        hasDigitalItems: order.hasDigitalItems,\r\n        isDownloadable: order.isDownloadable,\r\n        isComplete: order.isComplete,\r\n        shipping: {\r\n            amount: order.shippingCostTotal,\r\n            integerAmount: amountTransformer.toInteger(order.shippingCostTotal),\r\n            amountBeforeDiscount: order.shippingCostBeforeDiscount,\r\n            integerAmountBeforeDiscount: amountTransformer.toInteger(order.shippingCostBeforeDiscount),\r\n        },\r\n        storeCredit: {\r\n            amount: mapToStoreCredit(order.payments),\r\n        },\r\n        taxes: order.taxes,\r\n        taxTotal: {\r\n            amount: order.taxTotal,\r\n            integerAmount: amountTransformer.toInteger(order.taxTotal),\r\n        },\r\n        handling: {\r\n            amount: order.handlingCostTotal,\r\n            integerAmount: amountTransformer.toInteger(order.handlingCostTotal),\r\n        },\r\n        grandTotal: {\r\n            amount: order.orderAmount,\r\n            integerAmount: order.orderAmountAsInteger,\r\n        },\r\n    };\r\n}\r\n\r\nexport function mapToInternalIncompleteOrder(checkout: Checkout): InternalIncompleteOrder {\r\n    const payment = find(checkout.payments, { providerType: HOSTED });\r\n\r\n    return {\r\n        orderId: null,\r\n        isComplete: false,\r\n        payment: !payment ? {} : {\r\n            id: payment.providerId,\r\n            gateway: payment.gatewayId,\r\n            status: mapToInternalPaymentStatus(payment.detail.step),\r\n        },\r\n    };\r\n}\r\n\r\nfunction mapToInternalPaymentStatus(status: string): string {\r\n    return `PAYMENT_STATUS_${status}`;\r\n}\r\n\r\nfunction mapToStoreCredit(payments?: OrderPayments): number {\r\n    const item = find(payments, { providerId: 'storecredit' });\r\n\r\n    return item ? item.amount : 0;\r\n}\r\n\r\nfunction mapToGiftCertificates(payments?: OrderPayments): InternalGiftCertificateList {\r\n    const items = filter(payments, { providerId: 'giftcertificate' }) as GiftCertificateOrderPayment[];\r\n\r\n    return {\r\n        totalDiscountedAmount: reduce(items, (sum, item) => item.amount + sum, 0),\r\n        appliedGiftCertificates: keyBy(items.map(item => ({\r\n            code: item.detail.code,\r\n            discountedAmount: item.amount,\r\n            remainingBalance: item.detail.remaining,\r\n            giftCertificate: {\r\n                balance: item.amount + item.detail.remaining,\r\n                code: item.detail.code,\r\n                purchaseDate: '',\r\n            },\r\n        })), 'code'),\r\n    };\r\n}\r\n\r\nfunction mapToInternalOrderPayment(payments?: OrderPayments, payment: InternalOrderPayment = {}): InternalOrderPayment {\r\n    const item = find(payments, isDefaultOrderPayment) as GatewayOrderPayment;\r\n\r\n    if (!item) {\r\n        return {};\r\n    }\r\n\r\n    return {\r\n        id: item.providerId,\r\n        status: mapToInternalPaymentStatus(item.detail.step),\r\n        helpText: item.detail.instructions,\r\n        returnUrl: payment.returnUrl,\r\n    };\r\n}\r\n\r\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\r\n    return payment.providerId !== 'giftcertificate' && payment.providerId !== 'storecredit';\r\n}\r\n\r\nfunction mapToInternalSocialDataList(order: Order): { [itemId: string]: InternalSocialDataList } | undefined {\r\n    const socialDataObject: { [itemId: string]: InternalSocialDataList } = {};\r\n    const items = [\r\n        ...order.lineItems.physicalItems,\r\n        ...order.lineItems.digitalItems,\r\n    ];\r\n\r\n    items.forEach(item => {\r\n        socialDataObject[item.id] = mapToInternalSocialData(item);\r\n    });\r\n\r\n    return socialDataObject;\r\n}\r\n\r\nfunction mapToInternalSocialData(lineItem: LineItem): InternalSocialDataList {\r\n    const codes = ['fb', 'tw', 'gp'];\r\n\r\n    return codes.reduce((socialData, code) => {\r\n        const item = lineItem.socialMedia && find(lineItem.socialMedia, item => item.code === code);\r\n\r\n        if (!item) {\r\n            return socialData;\r\n        }\r\n\r\n        socialData[code] = {\r\n            name: lineItem.name,\r\n            description: lineItem.name,\r\n            image: lineItem.imageUrl,\r\n            url: item.link,\r\n            shareText: item.text,\r\n            sharingLink: item.link,\r\n            channelName: item.channel,\r\n            channelCode: item.code,\r\n        };\r\n\r\n        return socialData;\r\n    }, {} as InternalSocialDataList);\r\n}\r\n","import { keyBy, reduce, some } from 'lodash';\r\n\r\nimport { Checkout } from '../checkout';\r\nimport { AmountTransformer } from '../common/utility';\r\nimport { mapToInternalCoupon, mapToInternalGiftCertificate } from '../coupon';\r\nimport { mapToDiscountNotifications } from '../promotion';\r\n\r\nimport InternalCart from './internal-cart';\r\nimport mapToInternalLineItems from './map-to-internal-line-items';\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalCart(checkout: Checkout): InternalCart {\r\n    const decimalPlaces = checkout.cart.currency.decimalPlaces;\r\n    const amountTransformer = new AmountTransformer(decimalPlaces);\r\n\r\n    return {\r\n        id: checkout.cart.id,\r\n        items: mapToInternalLineItems(checkout.cart.lineItems, decimalPlaces),\r\n        currency: checkout.cart.currency.code,\r\n        coupon: {\r\n            discountedAmount: reduce(checkout.cart.coupons, (sum, coupon) => {\r\n                return sum + coupon.discountedAmount;\r\n            }, 0),\r\n            coupons: checkout.cart.coupons.map(mapToInternalCoupon),\r\n        },\r\n        discount: {\r\n            amount: checkout.cart.discountAmount,\r\n            integerAmount: amountTransformer.toInteger(checkout.cart.discountAmount),\r\n        },\r\n        discountNotifications: mapToDiscountNotifications(checkout.promotions),\r\n        giftCertificate: {\r\n            totalDiscountedAmount: reduce(checkout.giftCertificates, (sum, certificate) => {\r\n                return sum + certificate.used;\r\n            }, 0),\r\n            appliedGiftCertificates: keyBy(checkout.giftCertificates.map(mapToInternalGiftCertificate), 'code'),\r\n        },\r\n        shipping: {\r\n            amount: checkout.shippingCostTotal,\r\n            integerAmount: amountTransformer.toInteger(checkout.shippingCostTotal),\r\n            amountBeforeDiscount: checkout.shippingCostBeforeDiscount,\r\n            integerAmountBeforeDiscount: amountTransformer.toInteger(checkout.shippingCostBeforeDiscount),\r\n            required: some(checkout.cart.lineItems.physicalItems, lineItem => lineItem.isShippingRequired),\r\n        },\r\n        subtotal: {\r\n            amount: checkout.subtotal,\r\n            integerAmount: amountTransformer.toInteger(checkout.subtotal),\r\n        },\r\n        storeCredit: {\r\n            amount: checkout.customer ? checkout.customer.storeCredit : 0,\r\n        },\r\n        taxSubtotal: {\r\n            amount: checkout.taxTotal,\r\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\r\n        },\r\n        taxes: checkout.taxes,\r\n        taxTotal: {\r\n            amount: checkout.taxTotal,\r\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\r\n        },\r\n        handling: {\r\n            amount: checkout.handlingCostTotal,\r\n            integerAmount: amountTransformer.toInteger(checkout.handlingCostTotal),\r\n        },\r\n        grandTotal: {\r\n            amount: checkout.grandTotal,\r\n            integerAmount: amountTransformer.toInteger(checkout.grandTotal),\r\n        },\r\n    };\r\n}\r\n","import { DiscountNotification } from '../discount';\r\n\r\nimport { Promotion } from '.';\r\n\r\nexport default function mapToDiscountNotifications(promotions?: Promotion[]): DiscountNotification[] {\r\n    const notifications: DiscountNotification[] = [];\r\n\r\n    (promotions || []).forEach(promotion => {\r\n        (promotion.banners || []).forEach(banner => {\r\n            notifications.push({\r\n                placeholders: [],\r\n                discountType: null,\r\n                message: '',\r\n                messageHtml: banner.text,\r\n            });\r\n        });\r\n    });\r\n\r\n    return notifications;\r\n}\r\n"],"sourceRoot":""}