{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///external \"lodash\"","webpack:///./src/hosted-form/iframe-content/card-expiry-formatter.ts","webpack:///./src/hosted-form/iframe-content/card-number-formatter.ts","webpack:///./src/billing/is-billing-address-like.ts","webpack:///./src/coupon/map-to-internal-coupon.ts","webpack:///./src/common/utility/bind-decorator.ts","webpack:///./src/common/url/append-www.ts","webpack:///./src/payment/payment-request-sender.ts","webpack:///./src/payment/payment-request-transformer.ts","webpack:///./src/common/error/errors/missing-data-error.ts","webpack:///./src/coupon/map-to-internal-gift-certificate.ts","webpack:///./src/common/iframe/iframe-event-poster.ts","webpack:///./src/common/iframe/iframe-event-listener.ts","webpack:///./src/common/error/errors/standard-error.ts","webpack:///./src/common/utility/set-prototype-of.ts","webpack:///./src/hosted-form/errors/invalid-hosted-form-config-error.ts","webpack:///./src/hosted-form/errors/invalid-hosted-form-value-error.ts","webpack:///./src/hosted-form/iframe-content/get-hosted-input-storage.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-storage.ts","webpack:///./src/hosted-form/hosted-field-type.ts","webpack:///./src/hosted-form/iframe-content/map-to-autocomplete-type.ts","webpack:///./src/hosted-form/iframe-content/hosted-autocomplete-fieldset.ts","webpack:///./src/hosted-form/iframe-content/hosted-input.ts","webpack:///./src/hosted-form/iframe-content/hosted-card-expiry-input.ts","webpack:///./src/hosted-form/iframe-content/hosted-card-number-input.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-aggregator.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-payment-handler.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-validator.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-factory.ts","webpack:///./src/hosted-form/iframe-content/map-to-accessibility-label.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-initializer.ts","webpack:///./src/hosted-form/iframe-content/initialize-hosted-input.ts","webpack:///./src/hosted-form/iframe-content/notify-initialize-error.ts","webpack:///./src/bundles/hosted-form.ts","webpack:///external \"rxjs\"","webpack:///./src/payment/is-vaulted-instrument.ts","webpack:///external \"card-validator\"","webpack:///./src/address/map-to-internal-address.ts","webpack:///./src/hosted-form/iframe-content/hosted-input-events.ts","webpack:///./src/common/error/errors/invalid-argument-error.ts","webpack:///./src/common/url/parse-url.ts","webpack:///external \"rxjs/operators\"","webpack:///./src/cart/map-to-internal-line-items.ts","webpack:///./src/cart/map-gift-certificate-to-internal-line-item.ts","webpack:///./src/common/iframe/is-iframe-event.ts","webpack:///./src/payment/payment-method-types.ts","webpack:///./src/cart/map-to-internal-line-item.ts","webpack:///./src/shipping/map-to-internal-shipping-option.ts","webpack:///./src/common/utility/amount-transformer.ts","webpack:///./src/hosted-form/hosted-field-events.ts","webpack:///./src/customer/map-to-internal-customer.ts","webpack:///./src/order/map-to-internal-order.ts","webpack:///./src/cart/map-to-internal-cart.ts","webpack:///./src/promotion/map-to-discount-notifications.ts","webpack:///external \"@bigcommerce/bigpay-client\"","webpack:///./src/checkout-buttons/strategies/checkout-button-method-type.ts","webpack:///external \"yup\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","format","split","RegExp","month","year","trimmedMonth","slice","trimmedYear","length","toObject","test","card","maxLength","map","info","lengths","unformattedValue","this","unformat","gaps","filter","gapIndex","reduce","output","index","join","replace","isBillingAddressLike","address","id","couponTypes","mapToInternalCoupon","coupon","code","discount","displayName","discountType","indexOf","couponType","bindMethodDecorator","_","descriptor","method","boundMethod","set","target","decoratedTarget","getOwnPropertyNames","forEach","getOwnPropertyDescriptor","bindClassDecorator","appendWww","url","hostname","href","_client","submitPayment","payload","Promise","resolve","reject","error","response","_transformResponse","initializeOffsitePayment","headers","body","data","status","statusText","_cardExpiryFormatter","_cardNumberFormatter","transform","payment","checkoutState","billingAddress","getBillingAddress","checkout","getCheckout","customer","getCustomer","order","getOrder","paymentMethod","paymentMethods","getPaymentMethod","methodId","gatewayId","shippingAddress","getShippingAddress","consignments","getConsignments","shippingOption","getShippingOption","storeConfig","config","getStoreConfig","contextConfig","getContextConfig","instrumentMeta","instruments","getInstrumentsMeta","paymentMeta","getPaymentMethodsMeta","orderMeta","getOrderMeta","internalCustomer","authToken","paymentData","getPaymentToken","vaultAccessToken","MissingPaymentToken","additionalAction","cart","_transformPaymentMethod","quoteMeta","request","geoCountryCode","source","store","storeProfile","transformWithHostedFormData","values","nonce","paymentMethodMeta","consignment","selectedShippingOption","_transformHostedInputValues","context","gateway","initializationData","BRAINTREE_VENMO","BRAINTREE_PAYPAL","ccCvv","cardCodeVerification","ccNumber","cardNumberVerification","hostedFormNonce","cardCode","ccExpiry","cardExpiry","ccName","cardName","cardNumber","MissingDataErrorType","subtype","type","MissingBillingAddress","MissingCart","MissingConsignments","MissingCheckout","MissingCustomer","MissingCheckoutConfig","MissingOrderConfig","MissingOrder","MissingOrderId","MissingPayment","MissingPaymentMethod","MissingShippingAddress","getErrorMessage","mapToInternalGiftCertificate","giftCertificate","discountedAmount","used","remainingBalance","remaining","balance","purchaseDate","targetOrigin","_targetWindow","_targetOrigin","origin","post","event","options","targetWindow","window","Error","result","pipe","successType","errorType","toPromise","postMessage","setTarget","sourceOrigin","_sourceOrigins","_isListening","_listeners","listen","addEventListener","_handleMessage","stopListen","removeEventListener","addListener","listener","listeners","push","removeListener","splice","trigger","message","setPrototypeOf","__proto__","captureStackTrace","stack","errors","fieldErrors","storage","setNonce","_nonce","getNonce","getHostedInputStorage","HostedFieldType","mapToAutocompleteType","CardCode","CardExpiry","CardName","CardNumber","_form","_fieldTypes","_inputAggregator","_handleChange","targetInput","targetHostedInput","getInputs","find","input","_getAutocompleteElementId","getType","setValue","_inputs","_createInput","attach","appendChild","detach","parentElement","removeChild","document","createElement","autocomplete","tabIndex","style","position","opacity","zIndex","_type","_placeholder","_accessibilityLabel","_autocomplete","_styles","_fontUrls","_eventListener","_eventPoster","_inputValidator","_paymentHandler","_isTouched","_handleInput","_processChange","_handleBlur","_applyStyles","default","_validateForm","Blurred","fieldType","_handleFocus","focus","Focused","_handleValidate","_handleSubmit","preventDefault","Entered","_forceFocusToInput","activeElement","navigator","userAgent","toLowerCase","_input","setAttribute","setSelectionRange","ValidateRequested","SubmitRequested","handle","_configureInput","getValue","isTouched","_loadFonts","parent","hostedInput","AttachSucceeded","_unloadFonts","_formatValue","_notifyChange","_value","Changed","backgroundColor","border","display","height","margin","outline","padding","width","placeholder","styles","allowedStyles","color","fontFamily","fontSize","fontWeight","keys","_fontLinks","querySelector","link","rel","head","undefined","getInputValues","validate","results","isValid","Validated","_previousValue","form","accessibilityLabel","fontUrls","eventListener","eventPoster","inputAggregator","inputValidator","paymentHandler","_formatter","_autocompleteFieldset","cardInfo","prevCardInfo","CardTypeChanged","cardType","unformattedPreviousValue","bin","isPotentiallyValid","substr","BinChanged","selectionEnd","formattedValue","_parentWindow","Array","frames","frame","DOMException","_inputStorage","_paymentRequestSender","_paymentRequestTransformer","SubmitFailed","SubmitSucceeded","_isPaymentErrorResponse","_cardInstrument","_configureCardValidator","requiredFields","schemas","_getCardCodeSchema","CardCodeVerification","_getCardCodeVerificationSchema","_getCardExpirySchema","_getCardNameSchema","_getCardNumberSchema","CardNumberVerification","_getCardNumberVerificationSchema","abortEarly","inner","innerError","path","discoverInfo","getTypeInfo","visaInfo","updateCard","patterns","addCard","niceType","size","required","_mapFromInstrumentCardType","brand","max","last4","_parentOrigin","cardInstrument","mapToAccessibilityLabel","_createNumberInput","_createExpiryInput","normalizeParentOrigin","getParentOrigin","_createPaymentHandler","_factory","_storage","initialize","containerId","_createFormContainer","_resetPageStyles","AttachRequested","field","getElementById","node","overflow","container","button","noValidate","initializeHostedInput","parentOrigin","poster","notifyInitializeError","AttachFailed","isVaultedInstrument","instrument","Boolean","instrumentId","isHostedVaultedInstrument","isFormattedVaultedInstrument","formattedInstrument","formattedPayload","bigpay_token","token","mapToInternalAddress","addressId","firstName","lastName","company","addressLine1","address1","addressLine2","address2","city","province","stateOrProvince","provinceCode","stateOrProvinceCode","postCode","postalCode","country","countryCode","phone","customFields","HostedInputEventType","parseUrl","anchor","port","hash","protocol","pathname","search","mapToInternalLineItems","itemMap","decimalPlaces","idKey","item","amountTransformer","imageUrl","amount","amountAfterDiscount","integerAmount","toInteger","integerAmountAfterDiscount","integerUnitPrice","integerUnitPriceAfterDiscount","integerDiscount","quantity","sender","recipient","attributes","variantId","mapGiftCertificateToInternalLineItem","mapToInternalLineItemType","isIframeEvent","HOSTED","OFFLINE","mapToInternalLineItem","extendedListPrice","extendedSalePrice","discountAmount","listPrice","salePrice","downloadsPageUrl","downloadPageUrl","sku","categoryNames","productId","option","addedByPromotion","mapToInternalShippingOption","isSelected","description","price","cost","selected","isRecommended","transitTime","_decimalPlaces","Math","round","pow","HostedFieldEventType","mapToInternalCustomer","addresses","customerId","isGuest","storeCredit","email","fullName","customerGroupName","customerGroup","mapToInternalOrder","payments","items","currency","orderId","lineItems","customerCanBeCreated","mapToInternalOrderPayment","subtotal","baseAmount","coupons","sum","orderToken","callbackUrl","discountNotifications","providerId","totalDiscountedAmount","appliedGiftCertificates","detail","socialData","mapToInternalSocialDataList","hasDigitalItems","isDownloadable","isComplete","shipping","shippingCostTotal","amountBeforeDiscount","shippingCostBeforeDiscount","integerAmountBeforeDiscount","mapToStoreCredit","taxes","taxTotal","handling","handlingCostTotal","grandTotal","orderAmount","orderAmountAsInteger","mapToInternalPaymentStatus","isDefaultOrderPayment","step","helpText","instructions","returnUrl","socialDataObject","physicalItems","digitalItems","lineItem","socialMedia","image","shareText","text","sharingLink","channelName","channel","channelCode","mapToInternalCart","promotions","notifications","promotion","banners","banner","placeholders","messageHtml","giftCertificates","certificate","isShippingRequired","taxSubtotal","CheckoutButtonMethodType"],"mappings":"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","file":"hosted-form.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 227);\n","module.exports = require(\"tslib\");","module.exports = require(\"lodash\");","import CardExpiryDate from './card-expiry-date';\r\n\r\nconst NUMBER_SEPARATOR = '/';\r\n\r\nexport default class CardExpiryFormatter {\r\n    format(value: string): string {\r\n        const [month = '', year = ''] = value.split(new RegExp(`\\\\s*${NUMBER_SEPARATOR}\\\\s*`));\r\n        const trimmedMonth = month.slice(0, 2);\r\n        const trimmedYear = year.length === 4 ? year.slice(-2) : (year ? year.slice(0, 2) : month.slice(2));\r\n\r\n        // i.e.: '1'\r\n        if (value.length < 2) {\r\n            return month;\r\n        }\r\n\r\n        // ie.: '10 /' (without trailing space)\r\n        if (value.length > 3 && !trimmedYear) {\r\n            return trimmedMonth;\r\n        }\r\n\r\n        return `${trimmedMonth} ${NUMBER_SEPARATOR} ${trimmedYear}`;\r\n    }\r\n\r\n    toObject(value: string): CardExpiryDate {\r\n        const [month = '', year = ''] = value.split(new RegExp(`\\\\s*${NUMBER_SEPARATOR}\\\\s*`));\r\n\r\n        if (!/^\\d+$/.test(month) || !/^\\d+$/.test(year)) {\r\n            return { month: '', year: '' };\r\n        }\r\n\r\n        return {\r\n            month: month.length === 1 ? `0${month}` : month.slice(0, 2),\r\n            year: year.length === 2 ? `20${year}` : year.slice(0, 4),\r\n        };\r\n    }\r\n}\r\n","import { creditCardType, number } from 'card-validator';\r\nimport { max } from 'lodash';\r\n\r\nconst NUMBER_SEPARATOR = ' ';\r\n\r\nexport default class CardNumberFormatter {\r\n    format(value: string): string {\r\n        const { card } = number(value);\r\n\r\n        if (!card) {\r\n            return value;\r\n        }\r\n\r\n        const maxLength = max(creditCardType(value).map(info => max(info.lengths)));\r\n        const unformattedValue = this.unformat(value).slice(0, maxLength);\r\n\r\n        return card.gaps\r\n            .filter(gapIndex => unformattedValue.length > gapIndex)\r\n            .reduce((output, gapIndex, index) => (\r\n                [\r\n                    output.slice(0, gapIndex + index),\r\n                    output.slice(gapIndex + index),\r\n                ].join(NUMBER_SEPARATOR)\r\n            ), unformattedValue);\r\n    }\r\n\r\n    unformat(value: string): string {\r\n        const { card } = number(value);\r\n\r\n        if (!card) {\r\n            return value;\r\n        }\r\n\r\n        return value.replace(new RegExp(NUMBER_SEPARATOR, 'g'), '');\r\n    }\r\n}\r\n","import { Address } from '../address';\r\n\r\nimport BillingAddress from './billing-address';\r\n\r\nexport default function isBillingAddressLike(address: Address): address is BillingAddress {\r\n    const billingAddress = address as BillingAddress;\r\n\r\n    return typeof billingAddress.id !== 'undefined';\r\n}\r\n","import Coupon from './coupon';\r\nimport InternalCoupon from './internal-coupon';\r\n\r\nconst couponTypes = [\r\n    'per_item_discount',\r\n    'percentage_discount',\r\n    'per_total_discount',\r\n    'shipping_discount',\r\n    'free_shipping',\r\n];\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalCoupon(coupon: Coupon): InternalCoupon {\r\n    return {\r\n        code: coupon.code,\r\n        discount: coupon.displayName,\r\n        discountType: couponTypes.indexOf(coupon.couponType),\r\n    };\r\n}\r\n","/**\r\n * Decorates a class or a method by binding all its prototype methods or itself\r\n * to the calling instance respectively.\r\n */\r\nfunction bindDecorator<T extends Method>(target: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T>;\r\nfunction bindDecorator<T extends Constructor<object>>(target: T): T;\r\nfunction bindDecorator(target: any, key?: any, descriptor?: any): any {\r\n    if (!key || !descriptor) {\r\n        return bindClassDecorator(target);\r\n    }\r\n\r\n    return bindMethodDecorator(target, key, descriptor);\r\n}\r\n\r\nexport default bindDecorator;\r\n\r\n/**\r\n * Decorates a class by binding all its prototype methods to the calling\r\n * instance.\r\n */\r\nexport function bindClassDecorator<T extends Constructor<object>>(target: T): T {\r\n    const decoratedTarget = class extends target {};\r\n\r\n    Object.getOwnPropertyNames(target.prototype)\r\n        .forEach(key => {\r\n            const descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\r\n\r\n            if (!descriptor || key === 'constructor') {\r\n                return;\r\n            }\r\n\r\n            Object.defineProperty(\r\n                decoratedTarget.prototype,\r\n                key,\r\n                bindMethodDecorator(target.prototype, key, descriptor)\r\n            );\r\n        });\r\n\r\n    return decoratedTarget;\r\n}\r\n\r\n/**\r\n * Decorates a method by binding it to the calling instance.\r\n */\r\nexport function bindMethodDecorator<T extends Method>(_: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T> {\r\n    if (typeof descriptor.value !== 'function') {\r\n        return descriptor;\r\n    }\r\n\r\n    let method: T = descriptor.value;\r\n\r\n    return {\r\n        get() {\r\n            const boundMethod = method.bind(this) as T;\r\n\r\n            Object.defineProperty(this, key, {\r\n                ...descriptor,\r\n                value: boundMethod,\r\n            });\r\n\r\n            return boundMethod;\r\n        },\r\n        set(value) {\r\n            method = value;\r\n        },\r\n    };\r\n}\r\n\r\nexport type Constructor<T> = new (...args: any[]) => T;\r\nexport type Method = (...args: any[]) => any;\r\n","import parseUrl from './parse-url';\r\nimport Url from './url';\r\n\r\nexport default function appendWww(url: Url): Url {\r\n    return parseUrl(\r\n        url.hostname.indexOf('www') === 0 ?\r\n            url.href :\r\n            url.href.replace(url.hostname, `www.${url.hostname}`)\r\n    );\r\n}\r\n","import { Response } from '@bigcommerce/request-sender';\r\n\r\nimport PaymentRequestBody from './payment-request-body';\r\n\r\n/**\r\n * @todo Convert this file into TypeScript properly\r\n */\r\nexport default class PaymentRequestSender {\r\n    /**\r\n     * @constructor\r\n     * @param {BigpayClient} client\r\n     */\r\n    constructor(\r\n        private _client: any\r\n    ) {}\r\n\r\n    submitPayment(payload: PaymentRequestBody): Promise<Response<any>> {\r\n        return new Promise((resolve, reject) => {\r\n            this._client.submitPayment(payload, (error: any, response: any) => {\r\n                if (error) {\r\n                    reject(this._transformResponse(error));\r\n                } else {\r\n                    resolve(this._transformResponse(response));\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    initializeOffsitePayment(payload: PaymentRequestBody, target?: string): Promise<void> {\r\n        return new Promise(() => {\r\n            this._client.initializeOffsitePayment(payload, null, target);\r\n        });\r\n    }\r\n\r\n    private _transformResponse(response: any): Response<any> {\r\n        return {\r\n            headers: response.headers,\r\n            body: response.data,\r\n            status: response.status,\r\n            statusText: response.statusText,\r\n        };\r\n    }\r\n}\r\n","import { pick } from 'lodash';\r\n\r\nimport { mapToInternalAddress } from '../address';\r\nimport { mapToInternalCart } from '../cart';\r\nimport { InternalCheckoutSelectors } from '../checkout';\r\nimport { CheckoutButtonMethodType } from '../checkout-buttons/strategies';\r\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\r\nimport { mapToInternalCustomer } from '../customer';\r\nimport { HostedFormOrderData } from '../hosted-form';\r\nimport { CardExpiryFormatter, CardNumberFormatter, HostedInputValues } from '../hosted-form/iframe-content';\r\nimport { mapToInternalOrder } from '../order';\r\nimport { mapToInternalShippingOption } from '../shipping';\r\n\r\nimport isVaultedInstrument, { isFormattedVaultedInstrument } from './is-vaulted-instrument';\r\nimport Payment, { HostedCreditCardInstrument, HostedVaultedInstrument, PaymentInstrument } from './payment';\r\nimport PaymentMethod from './payment-method';\r\nimport PaymentRequestBody from './payment-request-body';\r\n\r\nexport default class PaymentRequestTransformer {\r\n    private _cardExpiryFormatter = new CardExpiryFormatter();\r\n    private _cardNumberFormatter = new CardNumberFormatter();\r\n\r\n    transform(payment: Payment, checkoutState: InternalCheckoutSelectors): PaymentRequestBody {\r\n        const billingAddress = checkoutState.billingAddress.getBillingAddress();\r\n        const checkout = checkoutState.checkout.getCheckout();\r\n        const customer = checkoutState.customer.getCustomer();\r\n        const order = checkoutState.order.getOrder();\r\n        const paymentMethod = checkoutState.paymentMethods.getPaymentMethod(payment.methodId, payment.gatewayId);\r\n        const shippingAddress = checkoutState.shippingAddress.getShippingAddress();\r\n        const consignments = checkoutState.consignments.getConsignments();\r\n        const shippingOption = checkoutState.consignments.getShippingOption();\r\n        const storeConfig = checkoutState.config.getStoreConfig();\r\n        const contextConfig = checkoutState.config.getContextConfig();\r\n        const instrumentMeta = checkoutState.instruments.getInstrumentsMeta();\r\n        const paymentMeta = checkoutState.paymentMethods.getPaymentMethodsMeta();\r\n        const orderMeta = checkoutState.order.getOrderMeta();\r\n        const internalCustomer = customer && billingAddress && mapToInternalCustomer(customer, billingAddress);\r\n\r\n        const authToken = instrumentMeta && payment.paymentData &&\r\n            (isVaultedInstrument(payment.paymentData) || isFormattedVaultedInstrument(payment.paymentData)) ?\r\n            `${checkoutState.payment.getPaymentToken()}, ${instrumentMeta.vaultAccessToken}` :\r\n            checkoutState.payment.getPaymentToken();\r\n\r\n        if (!authToken) {\r\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentToken);\r\n        }\r\n\r\n        return {\r\n            additionalAction: payment.additionalAction,\r\n            authToken,\r\n            customer: internalCustomer,\r\n            billingAddress: billingAddress && mapToInternalAddress(billingAddress),\r\n            shippingAddress: shippingAddress && mapToInternalAddress(shippingAddress, consignments),\r\n            shippingOption: shippingOption && mapToInternalShippingOption(shippingOption, true),\r\n            cart: checkout && mapToInternalCart(checkout),\r\n            order: order && mapToInternalOrder(order, orderMeta),\r\n            orderMeta,\r\n            payment: payment.paymentData,\r\n            paymentMethod: paymentMethod && this._transformPaymentMethod(paymentMethod),\r\n            quoteMeta: {\r\n                request: {\r\n                    ...paymentMeta,\r\n                    geoCountryCode: contextConfig && contextConfig.geoCountryCode,\r\n                },\r\n            },\r\n            source: 'bigcommerce-checkout-js-sdk',\r\n            store: pick(storeConfig && storeConfig.storeProfile, [\r\n                'storeHash',\r\n                'storeId',\r\n                'storeLanguage',\r\n                'storeName',\r\n            ]),\r\n        };\r\n    }\r\n\r\n    transformWithHostedFormData(values: HostedInputValues, data: HostedFormOrderData, nonce: string): PaymentRequestBody {\r\n        const { additionalAction, authToken, checkout, config, order, orderMeta, payment = {}, paymentMethod, paymentMethodMeta } = data;\r\n        const consignment = checkout && checkout.consignments[0];\r\n        const shippingAddress = consignment && consignment.shippingAddress;\r\n        const shippingOption = consignment && consignment.selectedShippingOption;\r\n\r\n        return {\r\n            additionalAction,\r\n            authToken,\r\n            paymentMethod: paymentMethod && this._transformPaymentMethod(paymentMethod),\r\n            customer: order && order.billingAddress && checkout && mapToInternalCustomer(checkout.customer, order.billingAddress),\r\n            billingAddress: order && order.billingAddress && mapToInternalAddress(order.billingAddress),\r\n            shippingAddress: shippingAddress && checkout && mapToInternalAddress(shippingAddress, checkout.consignments),\r\n            shippingOption: shippingOption && mapToInternalShippingOption(shippingOption, true),\r\n            cart: checkout && mapToInternalCart(checkout),\r\n            order: order && mapToInternalOrder(order, orderMeta),\r\n            orderMeta,\r\n            payment: this._transformHostedInputValues(values, payment, nonce),\r\n            quoteMeta: {\r\n                request: {\r\n                    ...paymentMethodMeta,\r\n                    geoCountryCode: config && config.context.geoCountryCode,\r\n                },\r\n            },\r\n            source: 'bigcommerce-checkout-js-sdk',\r\n            store: config && pick(config.storeConfig.storeProfile, [\r\n                'storeHash',\r\n                'storeId',\r\n                'storeLanguage',\r\n                'storeName',\r\n            ]),\r\n        };\r\n    }\r\n\r\n    private _transformPaymentMethod(paymentMethod: PaymentMethod): PaymentMethod {\r\n        if (paymentMethod.method === 'multi-option' && !paymentMethod.gateway) {\r\n            return { ...paymentMethod, gateway: paymentMethod.id };\r\n        }\r\n\r\n        if (paymentMethod.initializationData && paymentMethod.initializationData.gateway) {\r\n            return { ...paymentMethod, id: paymentMethod.initializationData.gateway };\r\n        }\r\n\r\n        if (paymentMethod.id === CheckoutButtonMethodType.BRAINTREE_VENMO) {\r\n            return { ...paymentMethod, id: CheckoutButtonMethodType.BRAINTREE_PAYPAL };\r\n        }\r\n\r\n        return paymentMethod;\r\n    }\r\n\r\n    private _transformHostedInputValues(\r\n        values: HostedInputValues,\r\n        payment: HostedCreditCardInstrument | HostedVaultedInstrument,\r\n        nonce: string\r\n    ): PaymentInstrument {\r\n        return 'instrumentId' in payment ?\r\n            {\r\n                ...payment,\r\n                ccCvv: values.cardCodeVerification,\r\n                ccNumber: values.cardNumberVerification && this._cardNumberFormatter.unformat(values.cardNumberVerification),\r\n                hostedFormNonce: nonce,\r\n            } :\r\n            {\r\n                ...payment,\r\n                ccCvv: values.cardCode,\r\n                ccExpiry: this._cardExpiryFormatter.toObject(values.cardExpiry || ''),\r\n                ccName: values.cardName || '',\r\n                ccNumber: this._cardNumberFormatter.unformat(values.cardNumber || ''),\r\n                hostedFormNonce: nonce,\r\n            };\r\n    }\r\n}\r\n","import StandardError from './standard-error';\r\n\r\nexport enum MissingDataErrorType {\r\n    MissingBillingAddress,\r\n    MissingCart,\r\n    MissingCheckout,\r\n    MissingConsignments,\r\n    MissingCustomer,\r\n    MissingCheckoutConfig,\r\n    MissingOrder,\r\n    MissingOrderConfig,\r\n    MissingOrderId,\r\n    MissingPayment,\r\n    MissingPaymentInstrument,\r\n    MissingPaymentMethod,\r\n    MissingPaymentToken,\r\n    MissingShippingAddress,\r\n}\r\n\r\n/**\r\n * Throw this error when data that is expected to exist is missing. Usually it\r\n * is due to the fact that certain data has not been retrieved from or saved to\r\n * the server yet. And such data is required to perform certain actions.\r\n */\r\nexport default class MissingDataError extends StandardError {\r\n    constructor(\r\n        public subtype: MissingDataErrorType\r\n    ) {\r\n        super(getErrorMessage(subtype));\r\n\r\n        this.name = 'MissingDataError';\r\n        this.type = 'missing_data';\r\n    }\r\n}\r\n\r\nfunction getErrorMessage(type: MissingDataErrorType): string {\r\n    switch (type) {\r\n    case MissingDataErrorType.MissingBillingAddress:\r\n        return 'Unable to proceed because billing address data is unavailable.';\r\n\r\n    case MissingDataErrorType.MissingCart:\r\n        return 'Unable to proceed because cart data is unavailable.';\r\n\r\n    case MissingDataErrorType.MissingConsignments:\r\n        return 'Unable to proceed because consignments data is unavailable.';\r\n\r\n    case MissingDataErrorType.MissingCheckout:\r\n        return 'Unable to proceed because checkout data is unavailable.';\r\n\r\n    case MissingDataErrorType.MissingCustomer:\r\n        return 'Unable to proceed because customer data is unavailable.';\r\n\r\n    case MissingDataErrorType.MissingCheckoutConfig:\r\n    case MissingDataErrorType.MissingOrderConfig:\r\n        return 'Unable to proceed because configuration data is unavailable.';\r\n\r\n    case MissingDataErrorType.MissingOrder:\r\n        return 'Unable to proceed because order data is unavailable.';\r\n\r\n    case MissingDataErrorType.MissingOrderId:\r\n        return 'Unable to proceed because order ID is unavailable or not generated yet.';\r\n\r\n    case MissingDataErrorType.MissingPayment:\r\n        return 'Unable to proceed because payment data is unavailable.';\r\n\r\n    case MissingDataErrorType.MissingPaymentToken:\r\n        return 'Unable to proceed because the token required to submit a payment is missing.';\r\n\r\n    case MissingDataErrorType.MissingPaymentMethod:\r\n        return 'Unable to proceed because payment method data is unavailable or not properly configured.';\r\n\r\n    case MissingDataErrorType.MissingShippingAddress:\r\n        return 'Unable to proceed because shipping address data is unavailable.';\r\n\r\n    default:\r\n        return 'Unable to proceed because the required data is unavailable.';\r\n    }\r\n}\r\n","import GiftCertificate from './gift-certificate';\r\nimport InternalGiftCertificate from './internal-gift-certificate';\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalGiftCertificate(giftCertificate: GiftCertificate): InternalGiftCertificate {\r\n    return {\r\n        code: giftCertificate.code,\r\n        discountedAmount: giftCertificate.used,\r\n        remainingBalance: giftCertificate.remaining,\r\n        giftCertificate: {\r\n            balance: giftCertificate.balance,\r\n            code: giftCertificate.code,\r\n            purchaseDate: giftCertificate.purchaseDate,\r\n        },\r\n    };\r\n}\r\n","import { fromEvent } from 'rxjs';\r\nimport { filter, map, take } from 'rxjs/operators';\r\n\r\nimport { parseUrl } from '../url';\r\n\r\nimport IframeEvent from './iframe-event';\r\nimport isIframeEvent from './is-iframe-event';\r\n\r\nexport interface IframeEventPostOptions<TSuccessEvent extends IframeEvent, TErrorEvent extends IframeEvent> {\r\n    errorType?: TErrorEvent['type'];\r\n    successType?: TSuccessEvent['type'];\r\n}\r\n\r\nexport default class IframeEventPoster<TEvent> {\r\n    private _targetOrigin: string;\r\n\r\n    constructor(\r\n        targetOrigin: string,\r\n        private _targetWindow?: Window\r\n    ) {\r\n        this._targetOrigin = targetOrigin === '*' ? '*' : parseUrl(targetOrigin).origin;\r\n    }\r\n\r\n    post(event: TEvent): void;\r\n    post<TSuccessEvent extends IframeEvent = IframeEvent, TErrorEvent extends IframeEvent = IframeEvent>(\r\n        event: TEvent,\r\n        options: IframeEventPostOptions<TSuccessEvent, TErrorEvent>\r\n    ): Promise<TSuccessEvent>;\r\n    post<TSuccessEvent extends IframeEvent = IframeEvent, TErrorEvent extends IframeEvent = IframeEvent>(\r\n        event: TEvent,\r\n        options?: IframeEventPostOptions<TSuccessEvent, TErrorEvent>\r\n    ): Promise<TSuccessEvent> | void {\r\n        const targetWindow = this._targetWindow;\r\n\r\n        if (window === targetWindow) {\r\n            return;\r\n        }\r\n\r\n        if (!targetWindow) {\r\n            throw new Error('Unable to post message because target window is not set.');\r\n        }\r\n\r\n        const result = options && fromEvent<MessageEvent>(window, 'message')\r\n            .pipe(\r\n                filter(event =>\r\n                    event.origin === this._targetOrigin &&\r\n                    isIframeEvent(event.data, event.data.type) &&\r\n                    [options.successType, options.errorType].indexOf(event.data.type) !== -1\r\n                ),\r\n                map(event => {\r\n                    if (options.errorType === event.data.type) {\r\n                        throw event.data;\r\n                    }\r\n\r\n                    return event.data;\r\n                }),\r\n                take(1)\r\n            )\r\n            .toPromise();\r\n\r\n        targetWindow.postMessage(event, this._targetOrigin);\r\n\r\n        return result;\r\n    }\r\n\r\n    setTarget(window: Window) {\r\n        this._targetWindow = window;\r\n    }\r\n}\r\n","import { appendWww, parseUrl } from '../url';\r\nimport { bindDecorator as bind } from '../utility';\r\n\r\nimport { IframeEventMap } from './iframe-event';\r\nimport isIframeEvent from './is-iframe-event';\r\n\r\nexport default class IframeEventListener<TEventMap extends IframeEventMap<keyof TEventMap>> {\r\n    private _isListening: boolean;\r\n    private _listeners: EventListeners<TEventMap>;\r\n    private _sourceOrigins: string[];\r\n\r\n    constructor(\r\n        sourceOrigin: string\r\n    ) {\r\n        this._sourceOrigins = [\r\n            parseUrl(sourceOrigin).origin,\r\n            appendWww(parseUrl(sourceOrigin)).origin,\r\n        ];\r\n        this._isListening = false;\r\n        this._listeners = {};\r\n    }\r\n\r\n    listen(): void {\r\n        if (this._isListening) {\r\n            return;\r\n        }\r\n\r\n        this._isListening = true;\r\n\r\n        window.addEventListener('message', this._handleMessage);\r\n    }\r\n\r\n    stopListen(): void {\r\n        if (!this._isListening) {\r\n            return;\r\n        }\r\n\r\n        this._isListening = false;\r\n\r\n        window.removeEventListener('message', this._handleMessage);\r\n    }\r\n\r\n    addListener<TType extends keyof TEventMap>(type: TType, listener: (event: TEventMap[TType]) => void): void {\r\n        let listeners = this._listeners[type];\r\n\r\n        if (!listeners) {\r\n            this._listeners[type] = listeners = [];\r\n        }\r\n\r\n        if (listeners.indexOf(listener) === -1) {\r\n            listeners.push(listener);\r\n        }\r\n    }\r\n\r\n    removeListener<TType extends keyof TEventMap>(type: TType, listener: (event: TEventMap[TType]) => void): void {\r\n        const listeners = this._listeners[type];\r\n\r\n        if (!listeners) {\r\n            return;\r\n        }\r\n\r\n        const index = listeners.indexOf(listener);\r\n\r\n        if (index >= 0) {\r\n            listeners.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    trigger<TType extends keyof TEventMap>(event: TEventMap[TType]): void {\r\n        const listeners = this._listeners[event.type];\r\n\r\n        if (!listeners) {\r\n            return;\r\n        }\r\n\r\n        listeners.forEach(listener => listener(event));\r\n    }\r\n\r\n    @bind\r\n    private _handleMessage(event: MessageEvent): void {\r\n        if ((this._sourceOrigins.indexOf(event.origin) === -1) ||\r\n            !isIframeEvent(event.data as TEventMap[keyof TEventMap], event.data.type)\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        this.trigger(event.data);\r\n    }\r\n}\r\n\r\ntype EventListeners<TEventMap> = {\r\n    [key in keyof TEventMap]?: Array<(event: TEventMap[key]) => void>;\r\n};\r\n","import { setPrototypeOf } from '../../utility';\r\n\r\nimport CustomError from './custom-error';\r\n\r\n/**\r\n * This error type should not be constructed directly. It is a base class for\r\n * all custom errors thrown in this library.\r\n */\r\nexport default abstract class StandardError extends Error implements CustomError {\r\n    name = 'StandardError';\r\n    type = 'standard';\r\n\r\n    constructor(message?: string) {\r\n        super(message || 'An unexpected error has occurred.');\r\n\r\n        setPrototypeOf(this, new.target.prototype);\r\n\r\n        if (typeof Error.captureStackTrace === 'function') {\r\n            Error.captureStackTrace(this, new.target);\r\n        } else {\r\n            this.stack = (new Error(this.message)).stack;\r\n        }\r\n    }\r\n}\r\n","export default function setPrototypeOf(object: any, prototype: object) {\r\n    if (Object.setPrototypeOf) {\r\n        Object.setPrototypeOf(object, prototype);\r\n    } else {\r\n        object.__proto__ = prototype;\r\n    }\r\n\r\n    return object;\r\n}\r\n","import { StandardError } from '../../common/error/errors';\r\n\r\nexport default class InvalidHostedFormConfigError extends StandardError {\r\n    constructor(message?: string) {\r\n        super(message || 'Unable to proceed due to invalid configuration provided for the hosted payment form.');\r\n\r\n        this.name = 'InvalidHostedFormConfigError';\r\n        this.type = 'invalid_hosted_form_config';\r\n    }\r\n}\r\n","import { flatMap, map, values } from 'lodash';\r\n\r\nimport { StandardError } from '../../common/error/errors';\r\nimport { HostedInputValidateErrorDataMap } from '../iframe-content';\r\n\r\nexport default class InvalidHostedFormValueError extends StandardError {\r\n    constructor(\r\n        public errors: HostedInputValidateErrorDataMap\r\n    ) {\r\n        super([\r\n            'Unable to proceed due to invalid user input values',\r\n            ...flatMap(values(errors), fieldErrors => map(fieldErrors, ({ message }) => message)),\r\n        ].join('. '));\r\n\r\n        this.name = 'InvalidHostedFormValueError';\r\n        this.type = 'invalid_hosted_form_value';\r\n    }\r\n}\r\n","import HostedInputStorage from './hosted-input-storage';\r\n\r\nlet storage: HostedInputStorage | null;\r\n\r\nexport default function getHostedInputStorage(): HostedInputStorage {\r\n    storage = storage || new HostedInputStorage();\r\n\r\n    return storage;\r\n}\r\n","export default class HostedInputStorage {\r\n    private _nonce?: string;\r\n\r\n    setNonce(nonce: string): void {\r\n        this._nonce = nonce;\r\n    }\r\n\r\n    getNonce(): string | undefined {\r\n        return this._nonce;\r\n    }\r\n}\r\n","enum HostedFieldType {\r\n    CardCode = 'cardCode',\r\n    CardCodeVerification = 'cardCodeVerification',\r\n    CardExpiry = 'cardExpiry',\r\n    CardName = 'cardName',\r\n    CardNumber = 'cardNumber',\r\n    CardNumberVerification = 'cardNumberVerification',\r\n}\r\n\r\nexport default HostedFieldType;\r\n","import HostedFieldType from '../hosted-field-type';\r\n\r\nexport default function mapToAutocompleteType(type: HostedFieldType): string {\r\n    switch (type) {\r\n    case HostedFieldType.CardCode:\r\n        return 'cc-csc';\r\n\r\n    case HostedFieldType.CardExpiry:\r\n        return 'cc-exp';\r\n\r\n    case HostedFieldType.CardName:\r\n        return 'cc-name';\r\n\r\n    case HostedFieldType.CardNumber:\r\n        return 'cc-number';\r\n\r\n    default:\r\n        return '';\r\n    }\r\n}\r\n","import { kebabCase } from 'lodash';\r\n\r\nimport HostedFieldType from '../hosted-field-type';\r\n\r\nimport HostedInputAggregator from './hosted-input-aggregator';\r\nimport mapToAutocompleteType from './map-to-autocomplete-type';\r\n\r\nexport default class HostedAutocompleteFieldset {\r\n    private _inputs: HTMLInputElement[];\r\n\r\n    constructor(\r\n        private _form: HTMLFormElement,\r\n        private _fieldTypes: HostedFieldType[],\r\n        private _inputAggregator: HostedInputAggregator\r\n    ) {\r\n        this._inputs = this._fieldTypes.map(type => this._createInput(type));\r\n    }\r\n\r\n    attach(): void {\r\n        this._inputs.forEach(input => this._form.appendChild(input));\r\n    }\r\n\r\n    detach(): void {\r\n        this._inputs.forEach(input => {\r\n            if (!input.parentElement) {\r\n                return;\r\n            }\r\n\r\n            input.parentElement.removeChild(input);\r\n        });\r\n    }\r\n\r\n    private _createInput(type: HostedFieldType): HTMLInputElement {\r\n        const input = document.createElement('input');\r\n\r\n        input.autocomplete = mapToAutocompleteType(type);\r\n        input.id = this._getAutocompleteElementId(type);\r\n        input.tabIndex = -1;\r\n        input.style.position = 'absolute';\r\n        input.style.opacity = '0';\r\n        input.style.zIndex = '-1';\r\n\r\n        input.addEventListener('change', this._handleChange);\r\n\r\n        return input;\r\n    }\r\n\r\n    private _handleChange: (event: Event) => void = event => {\r\n        const targetInput = event.target as HTMLInputElement;\r\n\r\n        if (!targetInput) {\r\n            throw new Error('Unable to get a reference to the target of the change event.');\r\n        }\r\n\r\n        const targetHostedInput = this._inputAggregator.getInputs()\r\n            .find(input => this._getAutocompleteElementId(input.getType()) === targetInput.id);\r\n\r\n        if (!targetHostedInput) {\r\n            return;\r\n        }\r\n\r\n        targetHostedInput.setValue(targetInput.value);\r\n    };\r\n\r\n    private _getAutocompleteElementId(type: HostedFieldType): string {\r\n        return `autocomplete-${kebabCase(type)}`;\r\n    }\r\n}\r\n","import { kebabCase } from 'lodash';\r\n\r\nimport { IframeEventListener, IframeEventPoster } from '../../common/iframe';\r\nimport { parseUrl } from '../../common/url';\r\nimport { HostedFieldEventMap, HostedFieldEventType, HostedFieldValidateRequestEvent } from '../hosted-field-events';\r\nimport HostedFieldType from '../hosted-field-type';\r\n\r\nimport HostedInputAggregator from './hosted-input-aggregator';\r\nimport { HostedInputEvent, HostedInputEventType } from './hosted-input-events';\r\nimport HostedInputPaymentHandler from './hosted-input-payment-handler';\r\nimport HostedInputStyles, { HostedInputStylesMap } from './hosted-input-styles';\r\nimport HostedInputValidator from './hosted-input-validator';\r\nimport HostedInputWindow from './hosted-input-window';\r\n\r\nexport default class HostedInput {\r\n    protected _input: HTMLInputElement;\r\n    protected _previousValue?: string;\r\n    private _fontLinks?: HTMLLinkElement[];\r\n    private _isTouched: boolean = false;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    constructor(\r\n        protected _type: HostedFieldType,\r\n        protected _form: HTMLFormElement,\r\n        protected _placeholder: string,\r\n        protected _accessibilityLabel: string,\r\n        protected _autocomplete: string,\r\n        protected _styles: HostedInputStylesMap,\r\n        protected _fontUrls: string[],\r\n        protected _eventListener: IframeEventListener<HostedFieldEventMap>,\r\n        protected _eventPoster: IframeEventPoster<HostedInputEvent>,\r\n        protected _inputAggregator: HostedInputAggregator,\r\n        protected _inputValidator: HostedInputValidator,\r\n        protected _paymentHandler: HostedInputPaymentHandler\r\n    ) {\r\n        this._input = document.createElement('input');\r\n\r\n        this._input.addEventListener('input', this._handleInput);\r\n        this._input.addEventListener('blur', this._handleBlur);\r\n        this._input.addEventListener('focus', this._handleFocus);\r\n        this._eventListener.addListener(HostedFieldEventType.ValidateRequested, this._handleValidate);\r\n        this._eventListener.addListener(HostedFieldEventType.SubmitRequested, this._paymentHandler.handle);\r\n\r\n        this._configureInput();\r\n    }\r\n\r\n    getType(): HostedFieldType {\r\n        return this._type;\r\n    }\r\n\r\n    getValue(): string {\r\n        return this._input.value;\r\n    }\r\n\r\n    setValue(value: string): void {\r\n        this._processChange(value);\r\n    }\r\n\r\n    isTouched(): boolean {\r\n        return this._isTouched;\r\n    }\r\n\r\n    attach(): void {\r\n        this._form.appendChild(this._input);\r\n        this._form.addEventListener('submit', this._handleSubmit);\r\n\r\n        this._loadFonts();\r\n\r\n        this._eventPoster.setTarget(window.parent);\r\n        this._eventListener.listen();\r\n\r\n        // fixes the issue on Firefox/Safari where the input doesn't focus properly\r\n        window.addEventListener('focus', this._forceFocusToInput);\r\n\r\n        // Assign itself to the global so it can be accessed by its sibling frames\r\n        (window as unknown as HostedInputWindow).hostedInput = this;\r\n\r\n        this._eventPoster.post({ type: HostedInputEventType.AttachSucceeded });\r\n    }\r\n\r\n    detach(): void {\r\n        if (this._input.parentElement) {\r\n            this._input.parentElement.removeChild(this._input);\r\n        }\r\n\r\n        this._form.removeEventListener('submit', this._handleSubmit);\r\n        this._unloadFonts();\r\n\r\n        window.removeEventListener('focus', this._forceFocusToInput);\r\n\r\n        this._eventListener.stopListen();\r\n    }\r\n\r\n    protected _formatValue(value: string): void {\r\n        this._input.value = value;\r\n    }\r\n\r\n    protected _notifyChange(_value: string): void {\r\n        this._eventPoster.post({\r\n            type: HostedInputEventType.Changed,\r\n            payload: {\r\n                fieldType: this._type,\r\n            },\r\n        });\r\n    }\r\n\r\n    private _configureInput(): void {\r\n        this._input.style.backgroundColor = 'transparent';\r\n        this._input.style.border = '0';\r\n        this._input.style.display = 'block';\r\n        this._input.style.height = '100%';\r\n        this._input.style.margin = '0';\r\n        this._input.style.outline = 'none';\r\n        this._input.style.padding = '0';\r\n        this._input.style.width = '100%';\r\n        this._input.id = kebabCase(this._type);\r\n        this._input.placeholder = this._placeholder;\r\n        this._input.autocomplete = this._autocomplete;\r\n\r\n        this._input.setAttribute('aria-label', this._accessibilityLabel);\r\n\r\n        this._applyStyles(this._styles.default);\r\n    }\r\n\r\n    private _applyStyles(styles: HostedInputStyles = {}): void {\r\n        const allowedStyles: { [key in keyof Required<HostedInputStyles>]: HostedInputStyles[key] } = {\r\n            color: styles.color,\r\n            fontFamily: styles.fontFamily,\r\n            fontSize: styles.fontSize,\r\n            fontWeight: styles.fontWeight,\r\n        };\r\n        const styleKeys = Object.keys(allowedStyles) as Array<keyof HostedInputStyles>;\r\n\r\n        styleKeys.forEach(key => {\r\n            if (!allowedStyles[key]) {\r\n                return;\r\n            }\r\n\r\n            this._input.style[key] = allowedStyles[key] || '';\r\n        });\r\n    }\r\n\r\n    private _loadFonts(): void {\r\n        if (this._fontLinks) {\r\n            return;\r\n        }\r\n\r\n        this._fontLinks = this._fontUrls\r\n            .filter(url => parseUrl(url).hostname === 'fonts.googleapis.com')\r\n            .filter(url => !document.querySelector(`link[href='${url}'][rel='stylesheet']`))\r\n            .map(url => {\r\n                const link = document.createElement('link');\r\n\r\n                link.rel = 'stylesheet';\r\n                link.href = url;\r\n\r\n                document.head.appendChild(link);\r\n\r\n                return link;\r\n            });\r\n    }\r\n\r\n    private _unloadFonts(): void {\r\n        if (!this._fontLinks) {\r\n            return;\r\n        }\r\n\r\n        this._fontLinks.forEach(link => {\r\n            if (!link.parentElement) {\r\n                return;\r\n            }\r\n\r\n            link.parentElement.removeChild(link);\r\n        });\r\n\r\n        this._fontLinks = undefined;\r\n    }\r\n\r\n    private async _validateForm(): Promise<void> {\r\n        const values = this._inputAggregator.getInputValues();\r\n        const results = await this._inputValidator.validate(values);\r\n\r\n        if (results.isValid) {\r\n            this._applyStyles(this._styles.default);\r\n        } else {\r\n            this._applyStyles(this._styles.error);\r\n        }\r\n\r\n        this._eventPoster.post({\r\n            type: HostedInputEventType.Validated,\r\n            payload: results,\r\n        });\r\n    }\r\n\r\n    private _processChange(value: string): void {\r\n        if (value === this._previousValue) {\r\n            return;\r\n        }\r\n\r\n        this._isTouched = true;\r\n\r\n        this._formatValue(value);\r\n        this._validateForm();\r\n        this._notifyChange(value);\r\n\r\n        this._previousValue = value;\r\n    }\r\n\r\n    private _handleInput: (event: Event) => void = event => {\r\n        const input = event.target as HTMLInputElement;\r\n\r\n        this._processChange(input.value);\r\n    };\r\n\r\n    private _handleBlur: (event: Event) => void = () => {\r\n        this._applyStyles(this._styles.default);\r\n        this._validateForm();\r\n\r\n        this._eventPoster.post({\r\n            type: HostedInputEventType.Blurred,\r\n            payload: {\r\n                fieldType: this._type,\r\n            },\r\n        });\r\n    };\r\n\r\n    private _handleFocus: (event: Event) => void = () => {\r\n        this._applyStyles(this._styles.focus);\r\n\r\n        this._eventPoster.post({\r\n            type: HostedInputEventType.Focused,\r\n            payload: {\r\n                fieldType: this._type,\r\n            },\r\n        });\r\n    };\r\n\r\n    private _handleValidate: (event: HostedFieldValidateRequestEvent) => void = () => {\r\n        this._validateForm();\r\n    };\r\n\r\n    private _handleSubmit: (event: Event) => void = event => {\r\n        event.preventDefault();\r\n\r\n        this._eventPoster.post({\r\n            type: HostedInputEventType.Entered,\r\n            payload: {\r\n                fieldType: this._type,\r\n            },\r\n        });\r\n    };\r\n\r\n    private _forceFocusToInput = (): void => {\r\n        if (document.activeElement === document.body) {\r\n            const browserName = navigator.userAgent.toLowerCase();\r\n            if (browserName.indexOf('safari') > -1) {\r\n                if (this._input.value === '') {\r\n                    this._input.setAttribute('value', ' ');\r\n                    this._input.setSelectionRange(0, 1);\r\n                    this._input.setAttribute('value', '');\r\n                }\r\n            } else {\r\n                this._input.focus();\r\n            }\r\n        }\r\n    };\r\n}\r\n","import { IframeEventListener, IframeEventPoster } from '../../common/iframe';\r\nimport { HostedFieldEventMap } from '../hosted-field-events';\r\nimport HostedFieldType from '../hosted-field-type';\r\n\r\nimport CardExpiryFormatter from './card-expiry-formatter';\r\nimport HostedInput from './hosted-input';\r\nimport HostedInputAggregator from './hosted-input-aggregator';\r\nimport { HostedInputEvent } from './hosted-input-events';\r\nimport HostedInputPaymentHandler from './hosted-input-payment-handler';\r\nimport { HostedInputStylesMap } from './hosted-input-styles';\r\nimport HostedInputValidator from './hosted-input-validator';\r\n\r\nexport default class HostedCardExpiryInput extends HostedInput {\r\n    /**\r\n     * @internal\r\n     */\r\n    constructor(\r\n        form: HTMLFormElement,\r\n        placeholder: string,\r\n        accessibilityLabel: string,\r\n        autocomplete: string,\r\n        styles: HostedInputStylesMap,\r\n        fontUrls: string[],\r\n        eventListener: IframeEventListener<HostedFieldEventMap>,\r\n        eventPoster: IframeEventPoster<HostedInputEvent>,\r\n        inputAggregator: HostedInputAggregator,\r\n        inputValidator: HostedInputValidator,\r\n        paymentHandler: HostedInputPaymentHandler,\r\n        private _formatter: CardExpiryFormatter\r\n    ) {\r\n        super(\r\n            HostedFieldType.CardExpiry,\r\n            form,\r\n            placeholder,\r\n            accessibilityLabel,\r\n            autocomplete,\r\n            styles,\r\n            fontUrls,\r\n            eventListener,\r\n            eventPoster,\r\n            inputAggregator,\r\n            inputValidator,\r\n            paymentHandler\r\n        );\r\n    }\r\n\r\n    protected _formatValue(value: string): void {\r\n        this._input.value = this._formatter.format(value);\r\n    }\r\n}\r\n","import { number } from 'card-validator';\r\nimport { get } from 'lodash';\r\n\r\nimport { IframeEventListener, IframeEventPoster } from '../../common/iframe';\r\nimport { HostedFieldEventMap } from '../hosted-field-events';\r\nimport HostedFieldType from '../hosted-field-type';\r\n\r\nimport CardNumberFormatter from './card-number-formatter';\r\nimport HostedAutocompleteFieldset from './hosted-autocomplete-fieldset';\r\nimport HostedInput from './hosted-input';\r\nimport HostedInputAggregator from './hosted-input-aggregator';\r\nimport { HostedInputEvent, HostedInputEventType } from './hosted-input-events';\r\nimport HostedInputPaymentHandler from './hosted-input-payment-handler';\r\nimport { HostedInputStylesMap } from './hosted-input-styles';\r\nimport HostedInputValidator from './hosted-input-validator';\r\n\r\nexport default class HostedCardNumberInput extends HostedInput {\r\n    /**\r\n     * @internal\r\n     */\r\n    constructor(\r\n        type: HostedFieldType,\r\n        form: HTMLFormElement,\r\n        placeholder: string,\r\n        accessibilityLabel: string,\r\n        autocomplete: string,\r\n        styles: HostedInputStylesMap,\r\n        fontUrls: string[],\r\n        eventListener: IframeEventListener<HostedFieldEventMap>,\r\n        eventPoster: IframeEventPoster<HostedInputEvent>,\r\n        inputAggregator: HostedInputAggregator,\r\n        inputValidator: HostedInputValidator,\r\n        paymentHandler: HostedInputPaymentHandler,\r\n        private _autocompleteFieldset: HostedAutocompleteFieldset,\r\n        private _formatter: CardNumberFormatter\r\n    ) {\r\n        super(\r\n            type,\r\n            form,\r\n            placeholder,\r\n            accessibilityLabel,\r\n            autocomplete,\r\n            styles,\r\n            fontUrls,\r\n            eventListener,\r\n            eventPoster,\r\n            inputAggregator,\r\n            inputValidator,\r\n            paymentHandler\r\n        );\r\n    }\r\n\r\n    attach(): void {\r\n        super.attach();\r\n\r\n        this._autocompleteFieldset.attach();\r\n    }\r\n\r\n    protected _notifyChange(value: string): void {\r\n        const cardInfo = number(value).card;\r\n        const prevCardInfo = this._previousValue && number(this._previousValue).card;\r\n\r\n        if (get(prevCardInfo, 'type') !== get(cardInfo, 'type')) {\r\n            this._eventPoster.post({\r\n                type: HostedInputEventType.CardTypeChanged,\r\n                payload: {\r\n                    cardType: cardInfo ? cardInfo.type : undefined,\r\n                },\r\n            });\r\n        }\r\n\r\n        const unformattedValue = this._formatter.unformat(value);\r\n        const unformattedPreviousValue = this._previousValue ? this._formatter.unformat(this._previousValue) : '';\r\n\r\n        const bin = unformattedValue.length >= 6 && number(unformattedValue).isPotentiallyValid ? unformattedValue.substr(0, 6) : '';\r\n        const prevBin = unformattedPreviousValue.length >= 6 ? unformattedPreviousValue.substr(0, 6) : '';\r\n\r\n        if (bin !== prevBin) {\r\n            this._eventPoster.post({\r\n                type: HostedInputEventType.BinChanged,\r\n                payload: { bin },\r\n            });\r\n        }\r\n    }\r\n\r\n    protected _formatValue(value: string): void {\r\n        const selectionEnd = this._input.selectionEnd;\r\n        const formattedValue = this._formatter.format(value);\r\n\r\n        if (selectionEnd === value.length && value.length < formattedValue.length) {\r\n            this._input.setSelectionRange(formattedValue.length, formattedValue.length);\r\n        } else {\r\n            this._input.setSelectionRange(selectionEnd || 0, selectionEnd || 0);\r\n        }\r\n\r\n        this._input.value = formattedValue;\r\n    }\r\n}\r\n","import HostedInput from './hosted-input';\r\nimport HostedInputValues from './hosted-input-values';\r\nimport HostedInputWindow from './hosted-input-window';\r\n\r\nexport default class HostedInputAggregator {\r\n    constructor(\r\n        private _parentWindow: Window\r\n    ) {}\r\n\r\n    getInputs(filter?: (field: HostedInput) => boolean): HostedInput[] {\r\n        return Array.prototype.slice.call(this._parentWindow.frames)\r\n            .reduce((result: Window[], frame: Window) => {\r\n                try {\r\n                    const input = (frame as HostedInputWindow).hostedInput;\r\n\r\n                    if (!input || (filter && !filter(input))) {\r\n                        return result;\r\n                    }\r\n\r\n                    return [...result, input];\r\n                } catch (error) {\r\n                    if (error instanceof DOMException) {\r\n                        return result;\r\n                    }\r\n\r\n                    // IE11 doesn't throw `DOMException`\r\n                    if (error instanceof Error && error.message === 'Permission denied') {\r\n                        return result;\r\n                    }\r\n\r\n                    throw error;\r\n                }\r\n            }, []);\r\n    }\r\n\r\n    getInputValues(filter?: (field: HostedInput) => boolean): HostedInputValues {\r\n        return this.getInputs(filter)\r\n            .reduce((result, input) => {\r\n                return {\r\n                    ...result,\r\n                    [input.getType()]: input.getValue(),\r\n                };\r\n            }, {} as HostedInputValues);\r\n    }\r\n}\r\n","import { Response } from '@bigcommerce/request-sender';\r\nimport { snakeCase } from 'lodash';\r\n\r\nimport { PaymentErrorResponseBody } from '../../common/error';\r\nimport { IframeEventPoster } from '../../common/iframe';\r\nimport { PaymentRequestSender, PaymentRequestTransformer } from '../../payment';\r\nimport { InvalidHostedFormValueError } from '../errors';\r\nimport { HostedFieldSubmitRequestEvent } from '../hosted-field-events';\r\n\r\nimport HostedInputAggregator from './hosted-input-aggregator';\r\nimport { HostedInputEvent, HostedInputEventType } from './hosted-input-events';\r\nimport HostedInputStorage from './hosted-input-storage';\r\nimport HostedInputValidator from './hosted-input-validator';\r\n\r\nexport default class HostedInputPaymentHandler {\r\n    constructor(\r\n        private _inputAggregator: HostedInputAggregator,\r\n        private _inputValidator: HostedInputValidator,\r\n        private _inputStorage: HostedInputStorage,\r\n        private _eventPoster: IframeEventPoster<HostedInputEvent>,\r\n        private _paymentRequestSender: PaymentRequestSender,\r\n        private _paymentRequestTransformer: PaymentRequestTransformer\r\n    ) {}\r\n\r\n    handle: (event: HostedFieldSubmitRequestEvent) => Promise<void> = async ({ payload: { data } }) => {\r\n        const values = this._inputAggregator.getInputValues();\r\n        const results = await this._inputValidator.validate(values);\r\n\r\n        this._eventPoster.post({\r\n            type: HostedInputEventType.Validated,\r\n            payload: results,\r\n        });\r\n\r\n        if (!results.isValid) {\r\n            const error = new InvalidHostedFormValueError(results.errors);\r\n\r\n            return this._eventPoster.post({\r\n                type: HostedInputEventType.SubmitFailed,\r\n                payload: {\r\n                    error: { code: snakeCase(error.name), message: error.message },\r\n                },\r\n            });\r\n        }\r\n\r\n        try {\r\n            await this._paymentRequestSender.submitPayment(\r\n                this._paymentRequestTransformer.transformWithHostedFormData(\r\n                    values,\r\n                    data,\r\n                    this._inputStorage.getNonce() || ''\r\n                )\r\n            );\r\n\r\n            this._eventPoster.post({ type: HostedInputEventType.SubmitSucceeded });\r\n        } catch (error) {\r\n            this._eventPoster.post({\r\n                type: HostedInputEventType.SubmitFailed,\r\n                payload: this._isPaymentErrorResponse(error) ?\r\n                    { error: error.body.errors[0], response: error } :\r\n                    { error: { code: snakeCase(error.name), message: error.message } },\r\n            });\r\n        }\r\n    };\r\n\r\n    private _isPaymentErrorResponse(response: any): response is Response<PaymentErrorResponseBody> {\r\n        const { body: { errors = [] } = {} } = response || {};\r\n\r\n        return (\r\n            typeof (errors[0] && errors[0].code) === 'string' &&\r\n            typeof (errors[0] && errors[0].message) === 'string'\r\n        );\r\n    }\r\n}\r\n","import { creditCardType, cvv, expirationDate, number } from 'card-validator';\r\nimport { includes } from 'lodash';\r\nimport { object, string, StringSchema, ValidationError } from 'yup';\r\n\r\nimport { CardInstrument } from '../../payment/instrument';\r\nimport HostedFieldType from '../hosted-field-type';\r\n\r\nimport { HostedInputValidateErrorDataMap } from './hosted-input-validate-error-data';\r\nimport HostedInputValidateResults from './hosted-input-validate-results';\r\nimport HostedInputValues from './hosted-input-values';\r\n\r\nexport default class HostedInputValidator {\r\n    constructor(\r\n        private _cardInstrument?: CardInstrument\r\n    ) {\r\n        this._configureCardValidator();\r\n    }\r\n\r\n    async validate(values: HostedInputValues): Promise<HostedInputValidateResults> {\r\n        const requiredFields = Object.keys(values);\r\n        const schemas: { [key in keyof HostedInputValues]: StringSchema } = {};\r\n        const results: HostedInputValidateResults = {\r\n            errors: {},\r\n            isValid: true,\r\n        };\r\n\r\n        if (includes(requiredFields, HostedFieldType.CardCode)) {\r\n            schemas.cardCode = this._getCardCodeSchema();\r\n            results.errors.cardCode = [];\r\n        }\r\n\r\n        if (includes(requiredFields, HostedFieldType.CardCodeVerification)) {\r\n            schemas.cardCodeVerification = this._getCardCodeVerificationSchema();\r\n            results.errors.cardCodeVerification = [];\r\n        }\r\n\r\n        if (includes(requiredFields, HostedFieldType.CardExpiry)) {\r\n            schemas.cardExpiry = this._getCardExpirySchema();\r\n            results.errors.cardExpiry = [];\r\n        }\r\n\r\n        if (includes(requiredFields, HostedFieldType.CardName)) {\r\n            schemas.cardName = this._getCardNameSchema();\r\n            results.errors.cardName = [];\r\n        }\r\n\r\n        if (includes(requiredFields, HostedFieldType.CardNumber)) {\r\n            schemas.cardNumber = this._getCardNumberSchema();\r\n            results.errors.cardNumber = [];\r\n        }\r\n\r\n        if (includes(requiredFields, HostedFieldType.CardNumberVerification)) {\r\n            schemas.cardNumberVerification = this._getCardNumberVerificationSchema();\r\n            results.errors.cardNumberVerification = [];\r\n        }\r\n\r\n        try {\r\n            await object(schemas)\r\n                .validate(values, { abortEarly: false });\r\n\r\n            return results;\r\n        } catch (error) {\r\n            if (error.name !== 'ValidationError') {\r\n                throw error;\r\n            }\r\n\r\n            return {\r\n                errors: (Object.keys(results.errors) as Array<keyof HostedInputValidateErrorDataMap>)\r\n                    .reduce((result, fieldType) => ({\r\n                        ...result,\r\n                        [fieldType]: (error as ValidationError).inner\r\n                            .filter(innerError => innerError.path === fieldType)\r\n                            .map(innerError => ({\r\n                                fieldType: innerError.path,\r\n                                message: innerError.errors.join(' '),\r\n                                type: innerError.type,\r\n                            })),\r\n                    }), {} as HostedInputValidateErrorDataMap),\r\n                isValid: false,\r\n            };\r\n        }\r\n    }\r\n\r\n    private _configureCardValidator(): void {\r\n        const discoverInfo = creditCardType.getTypeInfo('discover');\r\n        const visaInfo = creditCardType.getTypeInfo('visa');\r\n\r\n        // Need to support 13 digit PAN because some gateways only provide test credit card numbers in this format.\r\n        creditCardType.updateCard('visa', {\r\n            lengths: [13, ...(visaInfo.lengths || [])],\r\n        });\r\n\r\n        // Add support for 8-BIN Discover Cards.\r\n        creditCardType.updateCard('discover', {\r\n            patterns: [\r\n                ...(discoverInfo.patterns || []),\r\n                [810, 817],\r\n            ],\r\n        });\r\n\r\n        creditCardType.addCard({\r\n            niceType: 'Mada',\r\n            type: 'mada',\r\n            patterns: [\r\n                400861, 401757, 407197, 407395, 409201,\r\n                410685, 412565, 417633, 419593, 422817,\r\n                422818, 422819, 428331, 428671, 428672,\r\n                428673, 431361, 432328, 434107, 439954,\r\n                440533, 440647, 440795, 445564, 446393,\r\n                446404, 446672, 455036, 455708, 457865,\r\n                458456, 462220, 468540, 468541, 468542,\r\n                468543, 483010, 483011, 483012, 484783,\r\n                486094, 486095, 486096, 489317, 489318,\r\n                489319, 493428, 504300, 506968, 508160,\r\n                513213, 520058, 521076, 524130, 524514,\r\n                529415, 529741, 530060, 530906, 531095,\r\n                531196, 532013, 535825, 535989, 536023,\r\n                537767, 539931, 543085, 543357, 549760,\r\n                554180, 557606, 558848, 585265, 588845,\r\n                588846, 588847, 588848, 588849, 588850,\r\n                588851, 588982, 588983, 589005, 589206,\r\n                604906, 605141, 636120, 968201, 968202,\r\n                968203, 968204, 968205, 968206, 968207,\r\n                968208, 968209, 968210, 968211,\r\n            ],\r\n            gaps: [4, 8, 12],\r\n            lengths: [16, 18, 19],\r\n            code: {\r\n                name: 'CVV',\r\n                size: 3,\r\n            },\r\n        });\r\n    }\r\n\r\n    private _getCardCodeSchema(): StringSchema {\r\n        return string()\r\n            .required('CVV is required')\r\n            .test({\r\n                message: 'CVV must be valid',\r\n                name: 'invalid_card_code',\r\n                test(value) {\r\n                    const { card } = number((this.parent as HostedInputValues).cardNumber || '');\r\n\r\n                    return cvv(value, card && card.code ? card.code.size : undefined).isValid;\r\n                },\r\n            });\r\n    }\r\n\r\n    private _getCardCodeVerificationSchema(): StringSchema {\r\n        return string()\r\n            .required('CVV is required')\r\n            .test({\r\n                message: 'CVV must be valid',\r\n                name: 'invalid_card_code',\r\n                test: (value = '') => {\r\n                    const cardType = this._cardInstrument && this._mapFromInstrumentCardType(this._cardInstrument.brand);\r\n                    const cardInfo = cardType && creditCardType.getTypeInfo(cardType);\r\n\r\n                    return cvv(value, cardInfo && cardInfo.code ? cardInfo.code.size : undefined).isValid;\r\n                },\r\n            });\r\n    }\r\n\r\n    private _getCardExpirySchema(): StringSchema {\r\n        return string()\r\n            .required('Expiration date is required')\r\n            .test({\r\n                message: 'Expiration date must be a valid future date in MM / YY format',\r\n                name: 'invalid_card_expiry',\r\n                test: value => expirationDate(value).isValid,\r\n            });\r\n    }\r\n\r\n    private _getCardNameSchema(): StringSchema {\r\n        return string()\r\n            .max(200)\r\n            .required('Full name is required');\r\n    }\r\n\r\n    private _getCardNumberSchema(): StringSchema {\r\n        return string()\r\n            .required('Credit card number is required')\r\n            .test({\r\n                message: 'Credit card number must be valid',\r\n                name: 'invalid_card_number',\r\n                test: value => number(value).isValid,\r\n            });\r\n    }\r\n\r\n    private _getCardNumberVerificationSchema(): StringSchema {\r\n        return string()\r\n            .required('Credit card number is required')\r\n            .test({\r\n                message: 'Credit card number must be valid',\r\n                name: 'invalid_card_number',\r\n                test: (value = '') => number(value).isValid,\r\n            })\r\n            .test({\r\n                message: 'The card number entered does not match the card stored in your account',\r\n                name: 'mismatched_card_number',\r\n                test: (value = '') => this._cardInstrument ?\r\n                    value.slice(-this._cardInstrument.last4.length) === this._cardInstrument.last4 :\r\n                    false,\r\n            });\r\n    }\r\n\r\n    private _mapFromInstrumentCardType(type: string): string {\r\n        switch (type) {\r\n        case 'amex':\r\n        case 'american_express':\r\n            return 'american-express';\r\n\r\n        case 'diners':\r\n            return 'diners-club';\r\n\r\n        default:\r\n            return type;\r\n        }\r\n    }\r\n}\r\n","import { createClient as createBigpayClient } from '@bigcommerce/bigpay-client';\r\n\r\nimport { IframeEventListener, IframeEventPoster } from '../../common/iframe';\r\nimport { appendWww, parseUrl } from '../../common/url';\r\nimport { PaymentRequestSender, PaymentRequestTransformer } from '../../payment';\r\nimport { CardInstrument } from '../../payment/instrument';\r\nimport HostedFieldType from '../hosted-field-type';\r\n\r\nimport CardExpiryFormatter from './card-expiry-formatter';\r\nimport CardNumberFormatter from './card-number-formatter';\r\nimport getHostedInputStorage from './get-hosted-input-storage';\r\nimport HostedAutocompleteFieldset from './hosted-autocomplete-fieldset';\r\nimport HostedCardExpiryInput from './hosted-card-expiry-input';\r\nimport HostedCardNumberInput from './hosted-card-number-input';\r\nimport HostedInput from './hosted-input';\r\nimport HostedInputAggregator from './hosted-input-aggregator';\r\nimport HostedInputPaymentHandler from './hosted-input-payment-handler';\r\nimport { HostedInputStylesMap } from './hosted-input-styles';\r\nimport HostedInputValidator from './hosted-input-validator';\r\nimport mapToAccessibilityLabel from './map-to-accessibility-label';\r\nimport mapToAutocompleteType from './map-to-autocomplete-type';\r\n\r\nexport default class HostedInputFactory {\r\n    constructor(\r\n        private _parentOrigin: string\r\n    ) {}\r\n\r\n    create(\r\n        form: HTMLFormElement,\r\n        type: HostedFieldType,\r\n        styles: HostedInputStylesMap = {},\r\n        fontUrls: string[] = [],\r\n        placeholder: string = '',\r\n        accessibilityLabel: string = mapToAccessibilityLabel(type),\r\n        cardInstrument?: CardInstrument\r\n    ): HostedInput {\r\n        const autocomplete = mapToAutocompleteType(type);\r\n\r\n        if (type === HostedFieldType.CardNumber) {\r\n            return this._createNumberInput(type, form, styles, fontUrls, placeholder, accessibilityLabel, autocomplete);\r\n        }\r\n\r\n        if (type === HostedFieldType.CardNumberVerification) {\r\n            return this._createNumberInput(type, form, styles, fontUrls, placeholder, accessibilityLabel, autocomplete, cardInstrument);\r\n        }\r\n\r\n        if (type === HostedFieldType.CardExpiry) {\r\n            return this._createExpiryInput(form, styles, fontUrls, placeholder, accessibilityLabel, autocomplete);\r\n        }\r\n\r\n        if (type === HostedFieldType.CardCodeVerification) {\r\n            return this._createInput(type, form, styles, fontUrls, placeholder, accessibilityLabel, autocomplete, cardInstrument);\r\n        }\r\n\r\n        return this._createInput(type, form, styles, fontUrls, placeholder, accessibilityLabel, autocomplete);\r\n    }\r\n\r\n    normalizeParentOrigin(origin: string): void {\r\n        if (this._parentOrigin === origin) {\r\n            return;\r\n        }\r\n\r\n        if (this._parentOrigin !== appendWww(parseUrl(origin)).origin &&\r\n            origin !== appendWww(parseUrl(this._parentOrigin)).origin) {\r\n            return;\r\n        }\r\n\r\n        this._parentOrigin = origin;\r\n    }\r\n\r\n    getParentOrigin(): string {\r\n        return this._parentOrigin;\r\n    }\r\n\r\n    private _createExpiryInput(\r\n        form: HTMLFormElement,\r\n        styles: HostedInputStylesMap,\r\n        fontUrls: string[],\r\n        placeholder: string,\r\n        accessibilityLabel: string = '',\r\n        autocomplete: string = ''\r\n    ): HostedCardExpiryInput {\r\n        return new HostedCardExpiryInput(\r\n            form,\r\n            placeholder,\r\n            accessibilityLabel,\r\n            autocomplete,\r\n            styles,\r\n            fontUrls,\r\n            new IframeEventListener(this._parentOrigin),\r\n            new IframeEventPoster(this._parentOrigin, window.parent),\r\n            new HostedInputAggregator(window.parent),\r\n            new HostedInputValidator(),\r\n            this._createPaymentHandler(),\r\n            new CardExpiryFormatter()\r\n        );\r\n    }\r\n\r\n    private _createNumberInput(\r\n        type: HostedFieldType,\r\n        form: HTMLFormElement,\r\n        styles: HostedInputStylesMap,\r\n        fontUrls: string[],\r\n        placeholder: string,\r\n        accessibilityLabel: string = '',\r\n        autocomplete: string = '',\r\n        cardInstrument?: CardInstrument\r\n    ): HostedCardNumberInput {\r\n        return new HostedCardNumberInput(\r\n            type,\r\n            form,\r\n            placeholder,\r\n            accessibilityLabel,\r\n            autocomplete,\r\n            styles,\r\n            fontUrls,\r\n            new IframeEventListener(this._parentOrigin),\r\n            new IframeEventPoster(this._parentOrigin, window.parent),\r\n            new HostedInputAggregator(window.parent),\r\n            new HostedInputValidator(cardInstrument),\r\n            this._createPaymentHandler(cardInstrument),\r\n            new HostedAutocompleteFieldset(\r\n                form,\r\n                [HostedFieldType.CardCode, HostedFieldType.CardExpiry, HostedFieldType.CardName],\r\n                new HostedInputAggregator(window.parent)\r\n            ),\r\n            new CardNumberFormatter()\r\n        );\r\n    }\r\n\r\n    private _createInput(\r\n        type: HostedFieldType,\r\n        form: HTMLFormElement,\r\n        styles: HostedInputStylesMap,\r\n        fontUrls: string[],\r\n        placeholder: string,\r\n        accessibilityLabel: string = '',\r\n        autocomplete: string = '',\r\n        cardInstrument?: CardInstrument\r\n    ): HostedInput {\r\n        return new HostedInput(\r\n            type,\r\n            form,\r\n            placeholder,\r\n            accessibilityLabel,\r\n            autocomplete,\r\n            styles,\r\n            fontUrls,\r\n            new IframeEventListener(this._parentOrigin),\r\n            new IframeEventPoster(this._parentOrigin, window.parent),\r\n            new HostedInputAggregator(window.parent),\r\n            new HostedInputValidator(cardInstrument),\r\n            this._createPaymentHandler(cardInstrument)\r\n        );\r\n    }\r\n\r\n    private _createPaymentHandler(\r\n        cardInstrument?: CardInstrument\r\n    ): HostedInputPaymentHandler {\r\n        return new HostedInputPaymentHandler(\r\n            new HostedInputAggregator(window.parent),\r\n            new HostedInputValidator(cardInstrument),\r\n            getHostedInputStorage(),\r\n            new IframeEventPoster(this._parentOrigin, window.parent),\r\n            new PaymentRequestSender(createBigpayClient()),\r\n            new PaymentRequestTransformer()\r\n        );\r\n    }\r\n}\r\n","import HostedFieldType from '../hosted-field-type';\r\n\r\nexport default function mapToAccessibilityLabel(type: HostedFieldType): string {\r\n    switch (type) {\r\n    case HostedFieldType.CardCode:\r\n    case HostedFieldType.CardCodeVerification:\r\n        return 'CVC';\r\n\r\n    case HostedFieldType.CardExpiry:\r\n        return 'Expiration';\r\n\r\n    case HostedFieldType.CardName:\r\n        return 'Name on card';\r\n\r\n    case HostedFieldType.CardNumber:\r\n    case HostedFieldType.CardNumberVerification:\r\n        return 'Credit card number';\r\n    }\r\n}\r\n","import { fromEvent } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\n\r\nimport { IframeEventListener } from '../../common/iframe';\r\nimport { InvalidHostedFormConfigError } from '../errors';\r\nimport { HostedFieldAttachEvent, HostedFieldEventMap, HostedFieldEventType } from '../hosted-field-events';\r\n\r\nimport HostedInput from './hosted-input';\r\nimport HostedInputFactory from './hosted-input-factory';\r\nimport HostedInputStorage from './hosted-input-storage';\r\n\r\ninterface EventTargetLike<TEvent> {\r\n    addListener(eventName: string, handler: (event: TEvent) => void): void;\r\n    removeListener(eventName: string, handler: (event: TEvent) => void): void;\r\n}\r\n\r\nexport default class HostedInputInitializer {\r\n    constructor(\r\n        private _factory: HostedInputFactory,\r\n        private _storage: HostedInputStorage,\r\n        private _eventListener: IframeEventListener<HostedFieldEventMap>\r\n    ) { }\r\n\r\n    initialize(containerId: string, nonce?: string): Promise<HostedInput> {\r\n        if (nonce) {\r\n            this._storage.setNonce(nonce);\r\n        }\r\n\r\n        const form = this._createFormContainer(containerId);\r\n\r\n        this._resetPageStyles(containerId);\r\n        this._eventListener.listen();\r\n\r\n        return fromEvent<HostedFieldAttachEvent>(\r\n            this._eventListener as EventTargetLike<HostedFieldAttachEvent>,\r\n            HostedFieldEventType.AttachRequested\r\n        )\r\n            .pipe(\r\n                map(({ payload }) => {\r\n                    const { accessibilityLabel, cardInstrument, fontUrls, placeholder, styles, origin, type } = payload;\r\n\r\n                    if (origin) {\r\n                        this._factory.normalizeParentOrigin(origin);\r\n                    }\r\n\r\n                    const field = this._factory.create(form, type, styles, fontUrls, placeholder, accessibilityLabel, cardInstrument);\r\n\r\n                    field.attach();\r\n\r\n                    return field;\r\n                }),\r\n                take(1)\r\n            )\r\n            .toPromise();\r\n    }\r\n\r\n    private _resetPageStyles(containerId: string) {\r\n        const html = document.querySelector('html');\r\n        const body = document.querySelector('body');\r\n        const container = document.getElementById(containerId);\r\n\r\n        [html, body, container]\r\n            .forEach(node => {\r\n                if (!node) {\r\n                    return;\r\n                }\r\n\r\n                node.style.height = '100%';\r\n                node.style.width = '100%';\r\n                node.style.overflow = 'hidden';\r\n                node.style.padding = '0';\r\n                node.style.margin = '0';\r\n            });\r\n    }\r\n\r\n    private _createFormContainer(containerId: string): HTMLFormElement {\r\n        const container = document.getElementById(containerId);\r\n\r\n        if (!container) {\r\n            throw new InvalidHostedFormConfigError('Unable to proceed because the provided container ID is not valid.');\r\n        }\r\n\r\n        const form = document.createElement('form');\r\n        const button = document.createElement('button');\r\n\r\n        form.noValidate = true;\r\n        form.style.height = '100%';\r\n        form.style.width = '100%';\r\n        button.style.display = 'none';\r\n\r\n        container.appendChild(form);\r\n        form.appendChild(button);\r\n\r\n        return form;\r\n    }\r\n}\r\n","import { IframeEventListener } from '../../common/iframe';\r\nimport { HostedFieldEventMap } from '../hosted-field-events';\r\n\r\nimport getHostedInputStorage from './get-hosted-input-storage';\r\nimport HostedInput from './hosted-input';\r\nimport HostedInputFactory from './hosted-input-factory';\r\nimport HostedInputInitializer from './hosted-input-initializer';\r\nimport HostedInputOptions from './hosted-input-options';\r\n\r\nexport default function initializeHostedInput(options: HostedInputOptions): Promise<HostedInput> {\r\n    const { containerId, nonce, parentOrigin } = options;\r\n    const initializer = new HostedInputInitializer(\r\n        new HostedInputFactory(parentOrigin),\r\n        getHostedInputStorage(),\r\n        new IframeEventListener<HostedFieldEventMap>(parentOrigin)\r\n    );\r\n\r\n    return initializer.initialize(containerId, nonce);\r\n}\r\n","import { IframeEventPoster } from '../../common/iframe';\r\n\r\nimport { HostedInputAttachErrorEvent, HostedInputEventType } from './hosted-input-events';\r\nimport HostedInputInitializeErrorData from './hosted-input-initialize-error-data';\r\n\r\nconst poster = new IframeEventPoster<HostedInputAttachErrorEvent>('*', window.parent);\r\n\r\nexport default function notifyInitializeError(error: HostedInputInitializeErrorData): void {\r\n    poster.post({\r\n        type: HostedInputEventType.AttachFailed,\r\n        payload: { error },\r\n    });\r\n}\r\n","export { initializeHostedInput, notifyInitializeError } from '../hosted-form/iframe-content';\r\n","module.exports = require(\"rxjs\");","import { FormattedPayload, FormattedVaultedInstrument, HostedVaultedInstrument, PaymentInstrument, VaultedInstrument } from './payment';\r\n\r\nexport default function isVaultedInstrument(instrument: PaymentInstrument): instrument is VaultedInstrument {\r\n    return Boolean((instrument as VaultedInstrument).instrumentId);\r\n}\r\n\r\nexport function isHostedVaultedInstrument(instrument: PaymentInstrument): instrument is HostedVaultedInstrument {\r\n    return (\r\n        Boolean((instrument as HostedVaultedInstrument).instrumentId) &&\r\n        !instrument.hasOwnProperty('ccNumber') &&\r\n        !instrument.hasOwnProperty('ccCvv')\r\n    );\r\n}\r\n\r\nexport function isFormattedVaultedInstrument(instrument: PaymentInstrument): instrument is FormattedPayload<FormattedVaultedInstrument> {\r\n    const formattedInstrument = (instrument as FormattedPayload<FormattedVaultedInstrument>).formattedPayload;\r\n\r\n    if (!formattedInstrument) {\r\n        return false;\r\n    }\r\n\r\n    return typeof formattedInstrument.bigpay_token === 'string' ||\r\n        Boolean(formattedInstrument.bigpay_token && formattedInstrument.bigpay_token.token);\r\n}\r\n","module.exports = require(\"card-validator\");","import { isBillingAddressLike, BillingAddress } from '../billing';\r\nimport { Consignment } from '../shipping';\r\n\r\nimport Address from './address';\r\nimport InternalAddress from './internal-address';\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalAddress(\r\n    address: Address | BillingAddress,\r\n    consignments?: Consignment[]\r\n): InternalAddress<any> {\r\n    let addressId;\r\n\r\n    if (isBillingAddressLike(address)) {\r\n        addressId = address.id;\r\n    } else if (consignments && consignments.length) {\r\n        addressId = consignments[0].id;\r\n    }\r\n\r\n    return {\r\n        id: addressId,\r\n        firstName: address.firstName,\r\n        lastName: address.lastName,\r\n        company: address.company,\r\n        addressLine1: address.address1,\r\n        addressLine2: address.address2,\r\n        city: address.city,\r\n        province: address.stateOrProvince,\r\n        provinceCode: address.stateOrProvinceCode,\r\n        postCode: address.postalCode,\r\n        country: address.country,\r\n        countryCode: address.countryCode,\r\n        phone: address.phone,\r\n        customFields: address.customFields,\r\n    };\r\n}\r\n","import { Response } from '@bigcommerce/request-sender';\r\n\r\nimport { PaymentErrorData, PaymentErrorResponseBody } from '../../common/error';\r\nimport HostedFieldType from '../hosted-field-type';\r\n\r\nimport HostedInputInitializeErrorData from './hosted-input-initialize-error-data';\r\nimport HostedInputValidateResults from './hosted-input-validate-results';\r\n\r\n// Event types\r\nexport enum HostedInputEventType {\r\n    AttachSucceeded = 'HOSTED_INPUT:ATTACH_SUCCEEDED',\r\n    AttachFailed = 'HOSTED_INPUT:ATTACH_FAILED',\r\n    BinChanged = 'HOSTED_INPUT:BIN_CHANGED',\r\n    Blurred = 'HOSTED_INPUT:BLURRED',\r\n    Changed = 'HOSTED_INPUT:CHANGED',\r\n    CardTypeChanged = 'HOSTED_INPUT:CARD_TYPE_CHANGED',\r\n    Entered = 'HOSTED_INPUT:ENTERED',\r\n    Focused = 'HOSTED_INPUT:FOCUSED',\r\n    SubmitSucceeded = 'HOSTED_INPUT:SUBMIT_SUCCEEDED',\r\n    SubmitFailed = 'HOSTED_INPUT:SUBMIT_FAILED',\r\n    Validated = 'HOSTED_INPUT:VALIDATED',\r\n}\r\n\r\n// Event mapping\r\nexport interface HostedInputEventMap {\r\n    [HostedInputEventType.AttachSucceeded]: HostedInputAttachSuccessEvent;\r\n    [HostedInputEventType.AttachFailed]: HostedInputAttachErrorEvent;\r\n    [HostedInputEventType.BinChanged]: HostedInputBinChangeEvent;\r\n    [HostedInputEventType.Blurred]: HostedInputBlurEvent;\r\n    [HostedInputEventType.Changed]: HostedInputChangeEvent;\r\n    [HostedInputEventType.CardTypeChanged]: HostedInputCardTypeChangeEvent;\r\n    [HostedInputEventType.Entered]: HostedInputEnterEvent;\r\n    [HostedInputEventType.Focused]: HostedInputFocusEvent;\r\n    [HostedInputEventType.SubmitSucceeded]: HostedInputSubmitSuccessEvent;\r\n    [HostedInputEventType.SubmitFailed]: HostedInputSubmitErrorEvent;\r\n    [HostedInputEventType.Validated]: HostedInputValidateEvent;\r\n}\r\n\r\n// Events\r\nexport type HostedInputEvent = (\r\n    HostedInputAttachSuccessEvent |\r\n    HostedInputAttachErrorEvent |\r\n    HostedInputBinChangeEvent |\r\n    HostedInputBlurEvent |\r\n    HostedInputChangeEvent |\r\n    HostedInputCardTypeChangeEvent |\r\n    HostedInputEnterEvent |\r\n    HostedInputFocusEvent |\r\n    HostedInputSubmitSuccessEvent |\r\n    HostedInputSubmitErrorEvent |\r\n    HostedInputValidateEvent\r\n);\r\n\r\nexport interface HostedInputAttachSuccessEvent {\r\n    type: HostedInputEventType.AttachSucceeded;\r\n}\r\n\r\nexport interface HostedInputAttachErrorEvent {\r\n    type: HostedInputEventType.AttachFailed;\r\n    payload: {\r\n        error: HostedInputInitializeErrorData;\r\n    };\r\n}\r\n\r\nexport interface HostedInputBinChangeEvent {\r\n    type: HostedInputEventType.BinChanged;\r\n    payload: {\r\n        bin?: string;\r\n    };\r\n}\r\n\r\nexport interface HostedInputBlurEvent {\r\n    type: HostedInputEventType.Blurred;\r\n    payload: {\r\n        fieldType: HostedFieldType;\r\n    };\r\n}\r\n\r\nexport interface HostedInputChangeEvent {\r\n    type: HostedInputEventType.Changed;\r\n    payload: {\r\n        fieldType: HostedFieldType;\r\n    };\r\n}\r\n\r\nexport interface HostedInputCardTypeChangeEvent {\r\n    type: HostedInputEventType.CardTypeChanged;\r\n    payload: {\r\n        cardType?: string;\r\n    };\r\n}\r\n\r\nexport interface HostedInputFocusEvent {\r\n    type: HostedInputEventType.Focused;\r\n    payload: {\r\n        fieldType: HostedFieldType;\r\n    };\r\n}\r\n\r\nexport interface HostedInputEnterEvent {\r\n    type: HostedInputEventType.Entered;\r\n    payload: {\r\n        fieldType: HostedFieldType;\r\n    };\r\n}\r\n\r\nexport interface HostedInputSubmitSuccessEvent {\r\n    type: HostedInputEventType.SubmitSucceeded;\r\n}\r\n\r\nexport interface HostedInputSubmitErrorEvent {\r\n    type: HostedInputEventType.SubmitFailed;\r\n    payload: {\r\n        error: PaymentErrorData;\r\n        response?: Response<PaymentErrorResponseBody>;\r\n    };\r\n}\r\n\r\nexport interface HostedInputValidateEvent {\r\n    type: HostedInputEventType.Validated;\r\n    payload: HostedInputValidateResults;\r\n}\r\n","import StandardError from './standard-error';\r\n\r\n/**\r\n * This error should be thrown when a method is unable to proceed because the\r\n * caller has not provided all the arguments according to their requirements,\r\n * i.e.: if an argument is missing or it is not the expected data type.\r\n */\r\nexport default class InvalidArgumentError extends StandardError {\r\n    constructor(message?: string) {\r\n        super(message || 'Invalid arguments have been provided.');\r\n\r\n        this.name = 'InvalidArgumentError';\r\n        this.type = 'invalid_argument';\r\n    }\r\n}\r\n","import { InvalidArgumentError } from '../error/errors';\r\n\r\nimport Url from './url';\r\n\r\nexport default function parseUrl(url: string): Url {\r\n    if (!/^(https?:)?\\/\\//.test(url)) {\r\n        throw new InvalidArgumentError('The provided URL must be absolute.');\r\n    }\r\n\r\n    // new URL() is not supported in IE11, use anchor tag instead\r\n    const anchor = document.createElement('a');\r\n\r\n    anchor.href = url;\r\n\r\n    // IE11 returns 80 or 443 for the port number depending on the URL scheme,\r\n    // even if the port number is not specified in the URL.\r\n    const port = anchor.port && url.indexOf(`${anchor.hostname}:${anchor.port}`) !== -1 ?\r\n        anchor.port :\r\n        '';\r\n\r\n    return {\r\n        hash: anchor.hash,\r\n        hostname: anchor.hostname,\r\n        href: anchor.href,\r\n        origin: `${anchor.protocol}//${anchor.hostname}${port ? ':' + port : ''}`,\r\n        pathname: anchor.pathname,\r\n        port,\r\n        protocol: anchor.protocol,\r\n        search: anchor.search,\r\n    };\r\n}\r\n","module.exports = require(\"rxjs/operators\");","import InternalLineItem from './internal-line-item';\r\nimport { LineItem } from './line-item';\r\nimport LineItemMap from './line-item-map';\r\nimport mapGiftCertificateToInternalLineItem from './map-gift-certificate-to-internal-line-item';\r\nimport mapToInternalLineItem from './map-to-internal-line-item';\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalLineItems(\r\n    itemMap: LineItemMap,\r\n    decimalPlaces: number,\r\n    idKey: keyof LineItem = 'id'\r\n): InternalLineItem[] {\r\n    return (Object.keys(itemMap) as Array<keyof LineItemMap>)\r\n        .reduce((result, key) => [\r\n            ...result,\r\n            ...(itemMap[key] as LineItem[]).map((item: any) => {\r\n                if (key === 'giftCertificates') {\r\n                    return mapGiftCertificateToInternalLineItem(item, decimalPlaces);\r\n                }\r\n\r\n                return mapToInternalLineItem(\r\n                    item,\r\n                    mapToInternalLineItemType(key),\r\n                    decimalPlaces,\r\n                    idKey\r\n                );\r\n            }),\r\n        ], [] as InternalLineItem[]);\r\n}\r\n\r\nfunction mapToInternalLineItemType(type: string): string {\r\n    switch (type) {\r\n        case 'physicalItems':\r\n            return 'ItemPhysicalEntity';\r\n\r\n        case 'digitalItems':\r\n            return 'ItemDigitalEntity';\r\n\r\n        case 'giftCertificates':\r\n            return 'ItemGiftCertificateEntity';\r\n\r\n        default:\r\n            return '';\r\n    }\r\n}\r\n","import { AmountTransformer } from '../common/utility';\r\n\r\nimport InternalLineItem from './internal-line-item';\r\nimport { GiftCertificateItem } from './line-item';\r\n\r\nexport default function mapGiftCertificateToInternalLineItem(\r\n    item: GiftCertificateItem,\r\n    decimalPlaces: number\r\n): InternalLineItem {\r\n    const amountTransformer = new AmountTransformer(decimalPlaces);\r\n\r\n    return {\r\n        id: item.id,\r\n        imageUrl: '',\r\n        name: item.name,\r\n        amount: item.amount,\r\n        amountAfterDiscount: item.amount,\r\n        discount: 0,\r\n        integerAmount: amountTransformer.toInteger(item.amount),\r\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.amount),\r\n        integerUnitPrice: amountTransformer.toInteger(item.amount),\r\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.amount),\r\n        integerDiscount: 0,\r\n        quantity: 1,\r\n        sender: item.sender,\r\n        recipient: item.recipient,\r\n        type: 'ItemGiftCertificateEntity',\r\n        attributes: [],\r\n        variantId: null,\r\n    };\r\n}\r\n","import IframeEvent from './iframe-event';\r\n\r\nexport default function isIframeEvent<TEvent extends IframeEvent<TType>, TType extends string>(\r\n    object: any,\r\n    type: TType\r\n): object is TEvent {\r\n    return object.type === type;\r\n}\r\n","export const HOSTED = 'PAYMENT_TYPE_HOSTED';\r\nexport const OFFLINE = 'PAYMENT_TYPE_OFFLINE';\r\n","import { AmountTransformer } from '../common/utility';\r\n\r\nimport InternalLineItem from './internal-line-item';\r\nimport { DigitalItem, LineItem } from './line-item';\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalLineItem(\r\n    item: LineItem,\r\n    type: string,\r\n    decimalPlaces: number,\r\n    idKey: keyof LineItem = 'id'\r\n): InternalLineItem {\r\n    const amountTransformer = new AmountTransformer(decimalPlaces);\r\n\r\n    return {\r\n        id: (item[idKey] as string | number),\r\n        imageUrl: item.imageUrl,\r\n        amount: item.extendedListPrice,\r\n        amountAfterDiscount: item.extendedSalePrice,\r\n        discount: item.discountAmount,\r\n        integerAmount: amountTransformer.toInteger(item.extendedListPrice),\r\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.extendedSalePrice),\r\n        integerDiscount: amountTransformer.toInteger(item.discountAmount),\r\n        integerUnitPrice: amountTransformer.toInteger(item.listPrice),\r\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.salePrice),\r\n        downloadsPageUrl: (item as DigitalItem).downloadPageUrl,\r\n        name: item.name,\r\n        quantity: item.quantity,\r\n        brand: item.brand,\r\n        sku: item.sku,\r\n        categoryNames: item.categoryNames,\r\n        variantId: item.variantId,\r\n        productId: item.productId,\r\n        attributes: (item.options || []).map(option => ({\r\n            name: option.name,\r\n            value: option.value,\r\n        })),\r\n        addedByPromotion: item.addedByPromotion,\r\n        type,\r\n    };\r\n}\r\n","import InternalShippingOption from './internal-shipping-option';\r\nimport ShippingOption from './shipping-option';\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalShippingOption(option: ShippingOption, isSelected: boolean): InternalShippingOption {\r\n    return {\r\n        description: option.description,\r\n        module: option.type,\r\n        price: option.cost,\r\n        id: option.id,\r\n        selected: isSelected,\r\n        isRecommended: option.isRecommended,\r\n        imageUrl: option.imageUrl,\r\n        transitTime: option.transitTime,\r\n    };\r\n}\r\n","export default class AmountTransformer {\r\n    constructor(private _decimalPlaces: number) {}\r\n\r\n    toInteger(amount: number): number {\r\n        return Math.round(amount * Math.pow(10, this._decimalPlaces));\r\n    }\r\n}\r\n","import { CardInstrument } from '../payment/instrument';\r\n\r\nimport HostedFieldType from './hosted-field-type';\r\nimport { HostedFieldStylesMap } from './hosted-form-options';\r\nimport HostedFormOrderData from './hosted-form-order-data';\r\n\r\nexport enum HostedFieldEventType {\r\n    AttachRequested = 'HOSTED_FIELD:ATTACH_REQUESTED',\r\n    SubmitRequested = 'HOSTED_FIELD:SUBMITTED_REQUESTED',\r\n    ValidateRequested = 'HOSTED_FIELD:VALIDATE_REQUESTED',\r\n}\r\n\r\nexport interface HostedFieldEventMap {\r\n    [HostedFieldEventType.AttachRequested]: HostedFieldAttachEvent;\r\n    [HostedFieldEventType.SubmitRequested]: HostedFieldSubmitRequestEvent;\r\n    [HostedFieldEventType.ValidateRequested]: HostedFieldValidateRequestEvent;\r\n}\r\n\r\nexport type HostedFieldEvent = (\r\n    HostedFieldAttachEvent |\r\n    HostedFieldSubmitRequestEvent |\r\n    HostedFieldValidateRequestEvent\r\n);\r\n\r\nexport interface HostedFieldAttachEvent {\r\n    type: HostedFieldEventType.AttachRequested;\r\n    payload: {\r\n        accessibilityLabel?: string;\r\n        cardInstrument?: CardInstrument;\r\n        fontUrls?: string[];\r\n        placeholder?: string;\r\n        styles?: HostedFieldStylesMap;\r\n        origin?: string;\r\n        type: HostedFieldType;\r\n    };\r\n}\r\n\r\nexport interface HostedFieldSubmitRequestEvent {\r\n    type: HostedFieldEventType.SubmitRequested;\r\n    payload: {\r\n        data: HostedFormOrderData;\r\n        fields: HostedFieldType[];\r\n    };\r\n}\r\n\r\nexport interface HostedFieldValidateRequestEvent {\r\n    type: HostedFieldEventType.ValidateRequested;\r\n}\r\n","import { mapToInternalAddress } from '../address';\r\nimport { BillingAddress } from '../billing';\r\n\r\nimport { Customer } from '.';\r\nimport InternalCustomer from './internal-customer';\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalCustomer(customer: Customer, billingAddress: BillingAddress): InternalCustomer {\r\n    const firstName = customer.firstName || billingAddress.firstName || '';\r\n    const lastName = customer.lastName || billingAddress.lastName || '';\r\n\r\n    return {\r\n        addresses: (customer.addresses || []).map(address => mapToInternalAddress(address)),\r\n        customerId: customer.id,\r\n        isGuest: customer.isGuest,\r\n        storeCredit: customer.storeCredit,\r\n        email: customer.email || billingAddress.email || '',\r\n        firstName,\r\n        lastName,\r\n        name: customer.fullName || [firstName, lastName].join(' '),\r\n        customerGroupName: customer.customerGroup && customer.customerGroup.name,\r\n    };\r\n}\r\n","import { filter, find, keyBy, reduce } from 'lodash';\r\n\r\nimport { mapToInternalLineItems, LineItem } from '../cart';\r\nimport { Checkout } from '../checkout';\r\nimport { AmountTransformer } from '../common/utility';\r\nimport { mapToInternalCoupon } from '../coupon';\r\nimport { HOSTED } from '../payment';\r\n\r\nimport InternalOrder, { InternalGiftCertificateList, InternalIncompleteOrder, InternalOrderPayment, InternalSocialDataList } from './internal-order';\r\nimport Order, { GatewayOrderPayment, GiftCertificateOrderPayment, OrderPayment, OrderPayments } from './order';\r\nimport { OrderMetaState } from './order-state';\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalOrder(order: Order, orderMeta: OrderMetaState = {}): InternalOrder {\r\n    const decimalPlaces = order.currency.decimalPlaces;\r\n    const amountTransformer = new AmountTransformer(decimalPlaces);\r\n\r\n    return {\r\n        id: order.orderId,\r\n        items: mapToInternalLineItems(order.lineItems, order.currency.decimalPlaces, 'productId'),\r\n        orderId: order.orderId,\r\n        currency: order.currency.code,\r\n        customerCanBeCreated: order.customerCanBeCreated,\r\n        payment: mapToInternalOrderPayment(order.payments, orderMeta.payment),\r\n        subtotal: {\r\n            amount: order.baseAmount,\r\n            integerAmount: amountTransformer.toInteger(order.baseAmount),\r\n        },\r\n        coupon: {\r\n            discountedAmount: reduce(order.coupons, (sum, coupon) => {\r\n                return sum + coupon.discountedAmount;\r\n            }, 0),\r\n            coupons: order.coupons.map(mapToInternalCoupon),\r\n        },\r\n        discount: {\r\n            amount: order.discountAmount,\r\n            integerAmount: amountTransformer.toInteger(order.discountAmount),\r\n        },\r\n        token: orderMeta.orderToken,\r\n        callbackUrl: orderMeta.callbackUrl,\r\n        discountNotifications: [],\r\n        giftCertificate: mapToGiftCertificates(order.payments),\r\n        socialData: mapToInternalSocialDataList(order),\r\n        status: order.status,\r\n        hasDigitalItems: order.hasDigitalItems,\r\n        isDownloadable: order.isDownloadable,\r\n        isComplete: order.isComplete,\r\n        shipping: {\r\n            amount: order.shippingCostTotal,\r\n            integerAmount: amountTransformer.toInteger(order.shippingCostTotal),\r\n            amountBeforeDiscount: order.shippingCostBeforeDiscount,\r\n            integerAmountBeforeDiscount: amountTransformer.toInteger(order.shippingCostBeforeDiscount),\r\n        },\r\n        storeCredit: {\r\n            amount: mapToStoreCredit(order.payments),\r\n        },\r\n        taxes: order.taxes,\r\n        taxTotal: {\r\n            amount: order.taxTotal,\r\n            integerAmount: amountTransformer.toInteger(order.taxTotal),\r\n        },\r\n        handling: {\r\n            amount: order.handlingCostTotal,\r\n            integerAmount: amountTransformer.toInteger(order.handlingCostTotal),\r\n        },\r\n        grandTotal: {\r\n            amount: order.orderAmount,\r\n            integerAmount: order.orderAmountAsInteger,\r\n        },\r\n    };\r\n}\r\n\r\nexport function mapToInternalIncompleteOrder(checkout: Checkout): InternalIncompleteOrder {\r\n    const payment = find(checkout.payments, { providerType: HOSTED });\r\n\r\n    return {\r\n        orderId: null,\r\n        isComplete: false,\r\n        payment: !payment ? {} : {\r\n            id: payment.providerId,\r\n            gateway: payment.gatewayId,\r\n            status: mapToInternalPaymentStatus(payment.detail.step),\r\n        },\r\n    };\r\n}\r\n\r\nfunction mapToInternalPaymentStatus(status: string): string {\r\n    return `PAYMENT_STATUS_${status}`;\r\n}\r\n\r\nfunction mapToStoreCredit(payments?: OrderPayments): number {\r\n    const item = find(payments, { providerId: 'storecredit' });\r\n\r\n    return item ? item.amount : 0;\r\n}\r\n\r\nfunction mapToGiftCertificates(payments?: OrderPayments): InternalGiftCertificateList {\r\n    const items = filter(payments, { providerId: 'giftcertificate' }) as GiftCertificateOrderPayment[];\r\n\r\n    return {\r\n        totalDiscountedAmount: reduce(items, (sum, item) => item.amount + sum, 0),\r\n        appliedGiftCertificates: keyBy(items.map(item => ({\r\n            code: item.detail.code,\r\n            discountedAmount: item.amount,\r\n            remainingBalance: item.detail.remaining,\r\n            giftCertificate: {\r\n                balance: item.amount + item.detail.remaining,\r\n                code: item.detail.code,\r\n                purchaseDate: '',\r\n            },\r\n        })), 'code'),\r\n    };\r\n}\r\n\r\nfunction mapToInternalOrderPayment(payments?: OrderPayments, payment: InternalOrderPayment = {}): InternalOrderPayment {\r\n    const item = find(payments, isDefaultOrderPayment) as GatewayOrderPayment;\r\n\r\n    if (!item) {\r\n        return {};\r\n    }\r\n\r\n    return {\r\n        id: item.providerId,\r\n        status: mapToInternalPaymentStatus(item.detail.step),\r\n        helpText: item.detail.instructions,\r\n        returnUrl: payment.returnUrl,\r\n    };\r\n}\r\n\r\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\r\n    return payment.providerId !== 'giftcertificate' && payment.providerId !== 'storecredit';\r\n}\r\n\r\nfunction mapToInternalSocialDataList(order: Order): { [itemId: string]: InternalSocialDataList } | undefined {\r\n    const socialDataObject: { [itemId: string]: InternalSocialDataList } = {};\r\n    const items = [\r\n        ...order.lineItems.physicalItems,\r\n        ...order.lineItems.digitalItems,\r\n    ];\r\n\r\n    items.forEach(item => {\r\n        socialDataObject[item.id] = mapToInternalSocialData(item);\r\n    });\r\n\r\n    return socialDataObject;\r\n}\r\n\r\nfunction mapToInternalSocialData(lineItem: LineItem): InternalSocialDataList {\r\n    const codes = ['fb', 'tw', 'gp'];\r\n\r\n    return codes.reduce((socialData, code) => {\r\n        const item = lineItem.socialMedia && find(lineItem.socialMedia, item => item.code === code);\r\n\r\n        if (!item) {\r\n            return socialData;\r\n        }\r\n\r\n        socialData[code] = {\r\n            name: lineItem.name,\r\n            description: lineItem.name,\r\n            image: lineItem.imageUrl,\r\n            url: item.link,\r\n            shareText: item.text,\r\n            sharingLink: item.link,\r\n            channelName: item.channel,\r\n            channelCode: item.code,\r\n        };\r\n\r\n        return socialData;\r\n    }, {} as InternalSocialDataList);\r\n}\r\n","import { keyBy, reduce, some } from 'lodash';\r\n\r\nimport { Checkout } from '../checkout';\r\nimport { AmountTransformer } from '../common/utility';\r\nimport { mapToInternalCoupon, mapToInternalGiftCertificate } from '../coupon';\r\nimport { mapToDiscountNotifications } from '../promotion';\r\n\r\nimport InternalCart from './internal-cart';\r\nimport mapToInternalLineItems from './map-to-internal-line-items';\r\n\r\n/**\r\n * @deprecated This mapper is only for internal use only. It is required during\r\n * the transition period as we are moving to adopt the new storefront API object\r\n * schema.\r\n */\r\nexport default function mapToInternalCart(checkout: Checkout): InternalCart {\r\n    const decimalPlaces = checkout.cart.currency.decimalPlaces;\r\n    const amountTransformer = new AmountTransformer(decimalPlaces);\r\n\r\n    return {\r\n        id: checkout.cart.id,\r\n        items: mapToInternalLineItems(checkout.cart.lineItems, decimalPlaces),\r\n        currency: checkout.cart.currency.code,\r\n        coupon: {\r\n            discountedAmount: reduce(checkout.cart.coupons, (sum, coupon) => {\r\n                return sum + coupon.discountedAmount;\r\n            }, 0),\r\n            coupons: checkout.cart.coupons.map(mapToInternalCoupon),\r\n        },\r\n        discount: {\r\n            amount: checkout.cart.discountAmount,\r\n            integerAmount: amountTransformer.toInteger(checkout.cart.discountAmount),\r\n        },\r\n        discountNotifications: mapToDiscountNotifications(checkout.promotions),\r\n        giftCertificate: {\r\n            totalDiscountedAmount: reduce(checkout.giftCertificates, (sum, certificate) => {\r\n                return sum + certificate.used;\r\n            }, 0),\r\n            appliedGiftCertificates: keyBy(checkout.giftCertificates.map(mapToInternalGiftCertificate), 'code'),\r\n        },\r\n        shipping: {\r\n            amount: checkout.shippingCostTotal,\r\n            integerAmount: amountTransformer.toInteger(checkout.shippingCostTotal),\r\n            amountBeforeDiscount: checkout.shippingCostBeforeDiscount,\r\n            integerAmountBeforeDiscount: amountTransformer.toInteger(checkout.shippingCostBeforeDiscount),\r\n            required: some(checkout.cart.lineItems.physicalItems, lineItem => lineItem.isShippingRequired),\r\n        },\r\n        subtotal: {\r\n            amount: checkout.subtotal,\r\n            integerAmount: amountTransformer.toInteger(checkout.subtotal),\r\n        },\r\n        storeCredit: {\r\n            amount: checkout.customer ? checkout.customer.storeCredit : 0,\r\n        },\r\n        taxSubtotal: {\r\n            amount: checkout.taxTotal,\r\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\r\n        },\r\n        taxes: checkout.taxes,\r\n        taxTotal: {\r\n            amount: checkout.taxTotal,\r\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\r\n        },\r\n        handling: {\r\n            amount: checkout.handlingCostTotal,\r\n            integerAmount: amountTransformer.toInteger(checkout.handlingCostTotal),\r\n        },\r\n        grandTotal: {\r\n            amount: checkout.grandTotal,\r\n            integerAmount: amountTransformer.toInteger(checkout.grandTotal),\r\n        },\r\n    };\r\n}\r\n","import { DiscountNotification } from '../discount';\r\n\r\nimport { Promotion } from '.';\r\n\r\nexport default function mapToDiscountNotifications(promotions?: Promotion[]): DiscountNotification[] {\r\n    const notifications: DiscountNotification[] = [];\r\n\r\n    (promotions || []).forEach(promotion => {\r\n        (promotion.banners || []).forEach(banner => {\r\n            notifications.push({\r\n                placeholders: [],\r\n                discountType: null,\r\n                message: '',\r\n                messageHtml: banner.text,\r\n            });\r\n        });\r\n    });\r\n\r\n    return notifications;\r\n}\r\n","module.exports = require(\"@bigcommerce/bigpay-client\");","enum CheckoutButtonMethodType {\r\n    APPLEPAY = 'applepay',\r\n    AMAZON_PAY_V2 = 'amazonpay',\r\n    BRAINTREE_PAYPAL = 'braintreepaypal',\r\n    BRAINTREE_VENMO = 'braintreevenmo',\r\n    BRAINTREE_PAYPAL_CREDIT = 'braintreepaypalcredit',\r\n    GOOGLEPAY_ADYENV2 = 'googlepayadyenv2',\r\n    GOOGLEPAY_ADYENV3 = 'googlepayadyenv3',\r\n    GOOGLEPAY_AUTHORIZENET = 'googlepayauthorizenet',\r\n    GOOGLEPAY_BRAINTREE = 'googlepaybraintree',\r\n    GOOGLEPAY_CHECKOUTCOM = 'googlepaycheckoutcom',\r\n    GOOGLEPAY_CYBERSOURCEV2 = 'googlepaycybersourcev2',\r\n    GOOGLEPAY_ORBITAL = 'googlepayorbital',\r\n    GOOGLEPAY_STRIPE = 'googlepaystripe',\r\n    GOOGLEPAY_STRIPEUPE = 'googlepaystripeupe',\r\n    MASTERPASS = 'masterpass',\r\n    PAYPALEXPRESS = 'paypalexpress',\r\n    PAYPALCOMMERCE = 'paypalcommerce',\r\n}\r\n\r\nexport default CheckoutButtonMethodType;\r\n","module.exports = require(\"yup\");"],"sourceRoot":""}